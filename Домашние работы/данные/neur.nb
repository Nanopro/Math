(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    266344,       5295]
NotebookOptionsPosition[    264816,       5241]
NotebookOutlinePosition[    265161,       5256]
CellTagsIndexPosition[    265118,       5253]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"X1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "2"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", "2"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X3", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "2"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X11", "=", 
   RowBox[{"X1", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X22", "=", 
   RowBox[{"X2", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X33", "=", 
   RowBox[{"X3", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"X11", ",", "X22", ",", "X33"}], "}"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Y", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X1", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"X2", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"X3", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "}"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"X11", ",", "X22", ",", "X33"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.684297325940507*^9, 3.684297561895042*^9}, {
  3.6843294880815125`*^9, 3.6843295091865206`*^9}, {3.6843297273513794`*^9, 
  3.684329739301311*^9}, {3.6843315967006416`*^9, 3.6843316184901032`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.684297452418683*^9, 3.684297476077731*^9}, 
   3.684297507805767*^9, {3.684297544647264*^9, 3.684297562551153*^9}, 
   3.6843001468047237`*^9, {3.684329484941428*^9, 3.684329527191145*^9}, {
   3.684329732061504*^9, 3.684329740592164*^9}, 3.6843316197579465`*^9, 
   3.68433494832259*^9, 3.684344614976354*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAZPk/u3cT278AaPv6hx6TvwxiefuU
2ey/UmTYZHkR77/eaPxc2GTgv9CkCEc9zeC/7NKvuCuP078oYSs6MOXdv7wF
t+KHGOO/Ev0wVjG16r/q93Ni6DDuv44mKt9BNeW//i4YonPT47+ofofAZfrL
v7TIP2nsg+i/jHYOEZNL2b+4A3zXnarSvwBpHIrah7G/qO/tZCx4wL+8v105
HJPkvwZz+ZuJRei/WLOx0+I2zr/wO7udMgPdv6DKn//zu6y/wPtWsWpF4L+Q
qxDN4jDWv0iLV9QlOdG/htgS2bPm5L9onJHAefLfv6TS9i+P/+6/XOJe5pjH
1L+U+M7dt3bSv4xZDj5WGtO/hhRuiMXB678gahNQ7xfPv1K+Ugs++uK/Yj4W
qpzg5b8Eq4nYhjnkv3Sh8NaOwuu/jmlEhh3o5L+9Y77W
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAXj4LAB1u6j+AWl4WwEa3PwguUnb5
/90/ONrCBIOV2j+CEcgnxZPiP5idpmdnXuY/6GstHaQh0T/+3zdkoAbgP8Bl
So/Xu7w/RlOqm/Sx5j/2CTY5LTzuPx4AjpMXxOY/GOthktED2z/qmmpi//vs
P1iSSuef6sw/XE70DsCC0T/cbHDo0FXWP8iCVqAsqsQ/SAAiPu3Mzz8QsQkP
f8TNP4hTWkA+Ht8/qvLA+Mfj5D+QKtF49Gu5P9gBHLl5vNY/3MQ7XtSw1j+m
Ii1lSBXkP5isFhJ3Wck/cgObhd+b4T+geg09twnZPyTey2LYEtM/dPG8L5z/
2T+ATu7XHMrSP2QQ3/koOO0/aAudNSvn2j9MCLXNyUXSP6Aaf2NmC8o/jrdp
MWW96z/oi0Gg3aDpP9jNCzO0Bec/yEv1u4LF6T8Za6I+
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAdJ95yoom/z/ALhKNkPz2P+9+cBpp
p/Q/5Yksr0xl+T9LwHJDI9rzP0po3tJqmfM/AfEGTTq19z8PqRbJaWXyP4hg
9G1bHPA/UkjGJrm9/T9BM3LpWEzwP/z8mVBng/o/VsNnsHEl+z/yUVdsw/X8
PwIXKoZmVP0/6sHI7cBU/T8BcOW/Rqj+P8qEXnFujf4/SVihaHt78z/lYxY1
tgj/Pyq2QCxHCP4/5ADHWCPZ9T8sLaTRhRr1PxCNRE7fS/g//3umgPsM8z8P
DL9zI/f5PzZWfoVID/U/FPPyWkDU/j+hHbyveYHwP/y71h0xfvQ/s/hsY4yc
+T8QHg3Bilz9P1ASI+Bw2Po/cx1KYq3K9D8twm05CTbxPxYW8zRBnvY/sCUv
yvyJ9z/6/NvVIDbyP5m/tKH92P0/SO1Wge8v+j9zKKXH
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.943470184603709, 1.94690970508415}, {-0.9708830804476156, 
   1.9396268914917922`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.684297452418683*^9, 3.684297476077731*^9}, 
   3.684297507805767*^9, {3.684297544647264*^9, 3.684297562551153*^9}, 
   3.6843001468047237`*^9, {3.684329484941428*^9, 3.684329527191145*^9}, {
   3.684329732061504*^9, 3.684329740592164*^9}, 3.6843316197579465`*^9, 
   3.68433494832259*^9, 3.684344615026387*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6843001343781924`*^9, 3.684300141103814*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigma", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}]}], ")"}], 
   RowBox[{"-", "1"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsigma", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"sigma", "[", "x", "]"}], 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"sigma", "[", "x", "]"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.684298394885998*^9, 3.6842984091367188`*^9}, {
  3.6843112376437283`*^9, 3.6843112612139444`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"w", "=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"steps", "=", "400"}], ",", 
      RowBox[{"\[Eta]", "=", "25"}], ",", 
      RowBox[{"m", "=", 
       RowBox[{"Length", "[", "X", "]"}]}], ",", 
      RowBox[{"er", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"s", "=", "3"}], ",", 
      RowBox[{"s1", "=", "2"}], ",", 
      RowBox[{"s2", "=", "2"}], ",", "d2", ",", "d3", ",", 
      RowBox[{"s3", "=", "2"}], ",", "g", ",", "o", ",", "dd1", ",", "dd2", 
      ",", "i", ",", "j", ",", "k", ",", "w1", ",", "w2", ",", "iter", ",", 
      "z2", ",", "z3", ",", "y2", ",", "y3", ",", "y1", ",", "b1", ",", "b2", 
      ",", "db1", ",", "db2", ",", "dw1", ",", "dw2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"w1", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".1"}], ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"w2", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".1"}], ",", "0.1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"1", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"er", ",", 
       RowBox[{"{", 
        RowBox[{"w1", ",", "b1", ",", "w2", ",", "b2"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"iter", "=", "1"}], ",", 
       RowBox[{"iter", "\[LessEqual]", "steps"}], ",", 
       RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dw1", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dw2", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"db1", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"db2", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"g", "=", "1"}], ",", 
          RowBox[{"g", "\[LessEqual]", "m"}], ",", 
          RowBox[{"g", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"y1", "=", 
            RowBox[{"X", "[", 
             RowBox[{"[", "g", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"z2", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"w1", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                  RowBox[{"y1", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "1", ",", "s1"}], "}"}]}], "]"}], "+", 
               RowBox[{"b1", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "s2"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"y2", "=", 
            RowBox[{"sigma", "[", "z2", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"z3", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"w2", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                  RowBox[{"y2", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "1", ",", "s2"}], "}"}]}], "]"}], "+", 
               RowBox[{"b2", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "s3"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"y3", "=", 
            RowBox[{"sigma", "[", "z3", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"d3", "=", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Y", "[", 
                  RowBox[{"[", "g", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "2"}], "]"}], "]"}], "-", "y3"}], 
               ")"}]}], "*", 
             RowBox[{"dsigma", "[", "z3", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"d2", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"w2", "\[Transpose]"}], ".", "d3"}], ")"}], "*", 
             RowBox[{"dsigma", "[", "z2", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dw1", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{"d2", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"y1", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "d2", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"Length", "[", "y1", "]"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"dw2", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{"d3", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", 
               RowBox[{"y2", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "d3", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"Length", "[", "y2", "]"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"db1", "+=", "d2"}], ";", "\[IndentingNewLine]", 
           RowBox[{"db2", "+=", "d3"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"w2", "=", 
         RowBox[{"w2", "-", 
          RowBox[{
           FractionBox["\[Eta]", "m"], "dw2"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"w1", "=", 
         RowBox[{"w1", "-", 
          RowBox[{
           FractionBox["\[Eta]", "m"], "dw1"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"b1", "=", 
         RowBox[{"b1", "-", 
          RowBox[{
           FractionBox["\[Eta]", "m"], "db1"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"b2", "=", 
         RowBox[{"b2", "-", 
          RowBox[{
           FractionBox["\[Eta]", "m"], "db2"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"er", ",", 
          RowBox[{"{", 
           RowBox[{"w1", ",", "b1", ",", "w2", ",", "b2"}], "}"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"w1", ",", "b1", ",", "w2", ",", "b2", ",", "er"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.684297454573798*^9, 3.6842974551674414`*^9}, {
   3.6842975661476803`*^9, 3.684297813893073*^9}, {3.6842978548605356`*^9, 
   3.6842978683468313`*^9}, {3.684297937529454*^9, 3.684298022935981*^9}, 
   3.6842980702649636`*^9, {3.6842981609940224`*^9, 3.684298230810175*^9}, {
   3.6842983629477654`*^9, 3.6842985402320256`*^9}, {3.6842985944538493`*^9, 
   3.684298726231551*^9}, {3.68429913260956*^9, 3.6842991502294917`*^9}, {
   3.6842991857509265`*^9, 3.6842992576813264`*^9}, {3.6842992949863133`*^9, 
   3.6842993099476404`*^9}, {3.6842996987716093`*^9, 3.684299907065999*^9}, {
   3.684299938933182*^9, 3.68429994216777*^9}, {3.684300010223942*^9, 
   3.6843000494666495`*^9}, {3.6843002514991837`*^9, 3.6843003206156836`*^9}, 
   3.684300350900594*^9, {3.684300488190982*^9, 3.6843004931953287`*^9}, {
   3.6843006553246136`*^9, 3.6843006554964952`*^9}, {3.68430078055259*^9, 
   3.684300784570963*^9}, {3.6843008915831294`*^9, 3.68430090160159*^9}, {
   3.68430093855643*^9, 3.6843009443067675`*^9}, 3.684301002348587*^9, {
   3.684301048904273*^9, 3.684301051654647*^9}, {3.6843010971979713`*^9, 
   3.6843011375116987`*^9}, {3.684301231926306*^9, 3.684301236634614*^9}, {
   3.6843109499840355`*^9, 3.6843110987546115`*^9}, {3.6843111850379534`*^9, 
   3.684311204428686*^9}, {3.6843112738141356`*^9, 3.6843113782914*^9}, {
   3.6843114361137176`*^9, 3.6843114361760693`*^9}, {3.6843297890193057`*^9, 
   3.6843298507442737`*^9}, {3.684330230848545*^9, 3.684330238148389*^9}, {
   3.684330278655273*^9, 3.684330314521077*^9}, {3.684330377460848*^9, 
   3.6843303786406326`*^9}, {3.684330498476164*^9, 3.684330587336139*^9}, {
   3.6843306497605705`*^9, 3.6843306775500145`*^9}, {3.6843307335481787`*^9, 
   3.6843307344257603`*^9}, {3.684330922611661*^9, 3.684331064457799*^9}, {
   3.684331247369197*^9, 3.6843312521413636`*^9}, {3.6843321268695087`*^9, 
   3.684332171035821*^9}, {3.6843322042188444`*^9, 3.684332218362234*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"6.871131539303637`", ",", "6.071758151053727`"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3.858713578150712`", ",", "3.367125628493899`"}], 
              "}"}]}], "}"}], ",", 
           TemplateBox[{"3"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.05264226971901881`", ",", "0.026993176792112772`"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.030103366760108774`"}], ",", 
                   RowBox[{"-", "0.009544121262336891`"}]}], "}"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "0.07422285746437354`"}], ",", 
                   "0.08025533998788115`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.08222796799960408`", ",", 
                   RowBox[{"-", "0.054000655466174746`"}]}], "}"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
             TemplateBox[{"399"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"6.871131539303637`", ",", "6.071758151053727`"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"3.858713578150712`", ",", "3.367125628493899`"}], 
                  "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, 
                   FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                   RoundingRadius -> 7]& )], "}"}], ",", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, 
                  FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                  RoundingRadius -> 7]& )], ",", 
               RowBox[{"{", 
                RowBox[{"4.073273100492634`", ",", 
                 RowBox[{"-", "4.0635432715849085`"}]}], "}"}]}], "}"}]}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 409, 27842405773387785313, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 409, 27842405773387785313, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 409, 27842405773387785313, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[409]]], "Output",
 CellChangeTimes->{{3.6843309336659937`*^9, 3.6843309747882886`*^9}, 
   3.6843310740851903`*^9, 3.684331259873496*^9, {3.684332151670969*^9, 
   3.6843321752666287`*^9}, {3.684332208382608*^9, 3.684332222182769*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"x_", ",", "W_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a2", ",", "a3"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a2", "=", 
      RowBox[{"sigma", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"W", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], 
             RowBox[{"x", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], "+", 
          RowBox[{
           RowBox[{"W", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"W", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"sigma", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], 
            RowBox[{"a2", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "a2", "]"}]}], "}"}]}], "]"}], "+", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"W", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6843306094057875`*^9, 3.684330643233238*^9}, {
   3.684330691224089*^9, 3.684330852133885*^9}, 3.6843310772592974`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q", "[", "w_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Norm", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "w"}], "]"}], "-", 
         RowBox[{
          RowBox[{"Y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ")"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.68433109615484*^9, 3.6843311837479734`*^9}, {
  3.684332099458317*^9, 3.6843321099582863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "[", 
   RowBox[{"[", "5", "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6843312136378083`*^9, 3.684331218310912*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.05985557851385201`"}], ",", "0.054511826536294106`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.09863971585581238`", ",", 
       RowBox[{"-", "0.011343646595629808`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.04411293754778761`"}], ",", 
       RowBox[{"-", "0.040287936413332226`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.004989181491997674`", ",", "0.0642801826737191`"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.684331215753214*^9, 3.684331218683158*^9}, 
   3.6843312656273146`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Q", "[", 
     RowBox[{
      RowBox[{"w", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"w", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6843311862146087`*^9, 3.6843312217692084`*^9}, {
  3.684331270464526*^9, 3.684331284658946*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 401.}, {0, 0.944129979312047}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.684331245836178*^9, 3.6843312882613373`*^9}, {
  3.684332092346596*^9, 3.6843321210316343`*^9}, {3.6843321625772085`*^9, 
  3.6843321783166533`*^9}, {3.6843322129136157`*^9, 3.68433222529183*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DensityPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}], ",", "w"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"{", 
      RowBox[{"X11", ",", "X22"}], "}"}], "]"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"h", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}], ",", "w"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0.5"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6843307820593786`*^9, 3.6843307836084037`*^9}, {
  3.6843313856105433`*^9, 3.6843315697737703`*^9}, {3.684332233031969*^9, 
  3.68433226990359*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJyF2s2qZcUZxvGjyYWotMG7WBNRWjPyEoRM1FbwEhxmoKEjDhx6AWHTSCu6
8YADJwqKiqZpm47xM9oJPXSgRM5a51ey/9vi7EnxrHfVW/VUvV9Ve93/5HNP
/OXek5OTD/5wcnLWbr+7p9ovrl+5ef3KjwO/eQZvfjvwy5cuX710+d8D317f
vznwK6v844FfXfG7p4fj7PbwXzf5Ar+49R/4803/wH/bxh/49W1+A/9zm/9y
ON7d4sGzLb4wvjC+ML4wvofruNvD+ML4wvjC+ML4wvhm34qPeMFt8YXxhfGF
8T20k90exhfGF8YXxhfGF8Y3dll8tG/lBbfFF8YXxvfQD3Z7GF8YXxhfGF8Y
Xxjf+F3xkV1238oLbosvjO+hn+/2ML4wvjC+ML4wvjC+iSvFR35Xu+y+lRfc
Ft/DOLbbw/jC+ML4wvjC+ML4Jm4WH8WV+l3tsvtWXnBbfGF8YXxhfGF8YXxh
fJMXio/iZuNK/a522X0rL7jtYT7a7Q/z0W5/mI92+8N8tNsf5qPd/jAfjbxX
fJQXGjcbV+p3tcvuW3nBbfGF8YXxhfGF8U1eLz7Ke80LjZuNK/W72mX3rbzg
tvjC+ML4wvimbik+yuvNe80LjZuNK/W72mX3rbzgtvjC+ML4pi4rPqpbmteb
95oXGjcbV+p3tcvuW3nBbfGF8U3dWXxUl7VuaV5v3mteaNxsXKnf1S67b+UF
t8U3dXXxUd3Zuqx1S/N6817zQuNm40r9rnbZfSsvuC2+s3NE6+zWoa3TWsc0
zzcPNk80jjbO1A9rp93H8mz7wFn3q18vz551u/7f00fO4KX/DPzz/89+t5fH
tuen3oef2d4b+No6/mfLn7b3Rn+Yflh/+JN1vu8v21n1X0MfTB9sPjD98Avr
+lxb3tr0DP0w/TD9MP3wa5u+0682PUM/TD9MP0w/TJ+WPpg+mL7ZPKqnLX0w
fbN1Kq/Oq3rbdh+77uXVedWOagddV/pg9jWzY/q7zzD9MPuC6Z/5kfFq97VT
2PhwW+PVT+uH9SvYeJ139cL0a8XHxgdYPKpcHDVe86j3yb1vPt7vvLrO5I3j
XSf62Zn+4mvjWesYcvya92d2Jh7XLppXyoecX9EnPzR+tq4kx6d1WP2sdUv9
pHm+dk1eu+PfsHxXeet+cvxaJzfOtK4kx6f5o3XKzC/FF1j+hvGB8em5pXG2
dW/zUevEWZwyn+aXngubN3quaP5qHT6Lu7NxKz+se3b75kHPrVfzDrn5No90
X7oPzXc9Pzev99zcvNpzZvMiufWqH9Sumz97/m0d0/PwrA6xLs3nPS83v5PT
0zzffN04U3nPu63zev6d1Wn4ts7q+bj1Rs/LrT9aP5DDzRPNA603ev5tXdzz
8KzOtR6tU3tebn3U83P9tvUNuXgIy09dn+b95vHWRz0v91zR83PzaM/TPQf0
fN36ruftxtHWeVr9YOvT9es5rHVW7w9az/V83Tqn521y69H6sufv5rXWg+XR
9eg5unWq5/S27modZ51a5+FL3rqCPZDj37rjIrvtOcH7+Hd9yMsz9epouw6e
t66mr/Vt/Yhd0Dezg1ncaL5vvus9aeN965jqaV1mncWb1hGta7qu8NMr/mZ5
cOV15/SlVc8PA2/D/m/gR9f1+HK5Z53H96f6w/rD+sMPr/1vLLdWwVdDH0wf
TB/807reHy7Pr+/dGvpg/eH3135vLw+t8/909IeND3v/nXXe7w398LV1Pq+N
lj7Ye/S09f5sXvpXb/vN1oG+zhumb7YP9HVdYPpmdtB97L7QB7OPmR3WruiD
29ZuzafjFL+x4dNf1nX97gjTe2PTt/x9G2/wgMnNe4sXd4bcuDC595/a+C3P
bXrHOsPkeJkfuXWAyb1vPPL7tv1YHt/GGXYBk1t345PjC1sP2Piw+VVO/z82
+1r+vM1j2D1Mzo7Mj9x8YPOpXP/nN39Y/riu/0fDb2Fydm98cusB26/KGz9+
3MYZrefG8xw/2P5U3vgz46UfOT7wiCuR6z/s4VxuHWf7ZvyOU72zeXg+5Od2
0n2HZ3Zx0brN1tl86if2deYXF9nBzG6M3zjAbvkxTH6Rnc/8wvjkcOMaPxWn
YPJZ3KmfGx82v8rpE68alz0Xl2HyWZw1H9j+Va6/ccnVVca1TupL7/fc1nk0
v5CrY+lXr5Gr8+yD+rN2AqvzvE8frK5kV87ltWPnAnbZc3frNe/j13ra+7Dx
1MGta9S9/LD3HN63P6079Def3gM0bqmbxZ3eE7Fb+1E/671K47A6XXzpPZk4
YX8aN3oP1TziXOD5Zle/3Qt6b9xDJQ72frB50Dzx6j0onp43zve+r3nduPal
56Puk3mbD4x381rv67xvPt5nZz1nWHfz632bfSKH7XPzUe/bvG9+3udH9cvW
YY3nPR/q79zLT9wP/H7d+PWIK/0fQ39+0npff/Op3/W8qj/c/CNuiIv9H0gc
sn+w8Xqf03wiTorTvV+QH+wHbP31h/XHGw/j2w/jaa1L88W5vjFu8577DXqb
P5q3u47NRzA7ZAfiE0x/80/PJ9aNnzX+w/TD1qPnjf6/ZZ/x73d97BCfftfI
L83Pc+81Hrae7feEjW+Nu/0+TzyiHzZ+41vr2Z4Tm7dh4zU+tV7tuRYWP2D6
Yfxbj7aOYtfsFqa/50TY/Cvv91X1b3ZdP7Je5J5rPRf3PGff9PFHvHt/0PvH
3nvoL07Vv41TXuxdHLSPvV/o/yqtD3s/0HNH741aV/e+wXr1HEdfce9byeWv
nsN73pTf68f69T7tonuQ3r+SN46IC7D8XX9s3d57nn5HQN64hl9x/6+a3Vs1
jvZeybq3Tu89Tv/nb15ht3Dv7cnNwzrULpKPh5/WP/pdsDrCvvReoPnDutWu
4N7/6999so+wvMAuei8D939Y49Xu8IPlg/Hd13k+YJew9/iJ8fAzH+sBywf9
354+8zee92C8x//E5/Phl/TA5D0H9Xvonmt7r9rvauDGqcP/R+8cxX12zf6M
K/7aL3rNs35fvyEf561zu+89k3WovN/rzO7F7Gfvyfr9TO+lyI2nP1x/6L1g
7aZ1U7+f6T0c+UV1Ef69B63d1y/6vYzn/MHz2mXtdny/cS6f+XX9Hm/PYfOY
+VX72Yf+f9TzLjk9MH3W1brbBzwbN9kJfq1DxHX+BfeeqOcE/t37xf5/z1/V
VfyWX7WuIU/ddlTX9dzLz+SjnvPZf/2PP7HP3ouzg9Yt9ltbu/AePbVT824d
Bv8KAnRB9g==
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxN3Hf8/1P5P/DnIKmUVRllJFFGVlmF8EH2JlkfW9YHCRllZedDCNmjrIiG
mYxsfZW0lAYpJe1Safyu+/s83r+PP87teT3P8zrnXOc5rutxPc55vRbe5YDN
9x+6rltllq4b6/j2vuucz1HljVVmrvKqKnN2rZ7OXDnOVOVNuV7Nu7lTp82b
U/fqKsdUw7dWeVf1PW+dz1rlNVUWq/N3VHldyS/W9ZVLXrrKPGlHb77ovrbK
O2rQH9f1Z0teqMrssXPR2MqWt8VWNi6SI7sWjq5rv6mxlql+ljJ+2rF34apf
seqeY1vq2LJ81S3XN1veVTa8UHrvqfPFc92cNqry/iqruYd1fdW6/quSl4mt
xl/Btdi7bOrYu1yO7H1PrrNr+dRp897Usess97LKOjXGH+u4Rh1/XfVbl21r
l7xSlXfX+YIZe7U6f3/sXbh0Fqry29i6dNd0V8+RvR+IfexaM0e2rJWjeayd
I3vXSDtt1q9xPtg3ez9bti1dZeM6/1sdN6zjC5nP3Hlmy5Ytm1b9i/ornS1K
/kPJnyt5uSqb1fl6Vd5XdRtU2Th2s/eUKh+vckSVbdyLOk5xH0reqm82bhr7
zOliz7fKh+raZqkzv+3Lhg9X+XPJ+1T5sLoqq5buDqX715LPqOu70KvzLaus
X3UfqrJd12S2bZ7+1kr7DfNe7JAj26+sPlerMrX62Dn2sWVqjvrYqcomubZT
jbljlZf0Xe12r3b/LHnvV4y/Y/reJGX1zPmz1W6vKrtWm73qfNu02bFv8p7m
VX0uVmXNqts3drP389XuoCqHVP0lddy/yr4l717H3aq8XDoHxFbzWK/62L+u
/6fkveq4Z9/mtEcd96jjIVX2S9/sPTTjs+tjXdNxfljq9s6z/UieybXV/9pV
PtK3562OvUfmqO+N6/qhdb2v8qWS169ycMn7lL0fqfK/0jmwzqf1zfZn+Loq
Hy35hNjIlpOrHJ7xj0rf+6fsmDkf3jf946ucmPmw/VPpw/lKNeYWZcNHS/fU
vKfs/Zr3uspRVf/LKrNUObbq+9L/RMkzVbnOva9yTMknVDmurp9VZatqd1yd
v6rKZ7pWz4bzY7dv4pzMhy3nVTkp19au/l5b5fxqe3ba0Tupzk+MjXdX/9tW
OaXOt6vjaXWctcoOJU+v42v4kurjrDq+tsqnqpxZ7S6tclnXZHbOUjqfrmuf
rHJ56th7ZdfGZuMVqXN+bux1L8/u2/lV3mFy3+b3BeeZ0ybV/zxVvuE5lG33
1HH+KruVfEkdX+8deIVdryndy6ruDe6bd7rqbqhyU66z8cau1Wtzc+rY+Hj1
uVeV66vdVVVm75tts1ef15Y8R5WLqpxe5UJzrOMVfZvrNqVzg/oq360+9qny
JXZU/c11nLvK10vvi7HnrhzZ8o0czePuHNl7ed/076zy1ZK/0jd7b63jm5x7
x+r4xipfLnlqjfm5kmdTV+PeXsc3V9m45LvE5Co/LJ1pVe4seSf+utptUeXL
Jd9Rx0e6FjvFKXHr8djHrsdii3l8K0fz+Ga1va/KPSX/X+q0eaDq3lLlXt9X
jfl4yQtX+WnJh1d52Jhl21FVvtU3PCFWiBlv1Wcdn6hyb8kP1/GHVX7UNZmd
T+X4aJWfxD52PZ0jW56ott/p2zyerOPbqny75B+nnTbfr7pF6JW8aN+wEczx
wzo+1DcbPl42Hl5lwb7hI/cIzpgp9k5ipbly7YjS+3jf/Ipx7si9g3dgCZhj
kbFho2e6hoHmzTU4aL6cH1uDLRhMBUOph5HeGYwE2xhfrF0kNnluC3UzsJFn
OUvGhIFmz/UFc78XTXvX3pFzuovlHCZaPPYsMTac9Ev9Bh/BUfAUTLdE5rB4
2i8avPerjAk/TGIWR7jkVRn7jbF92eixHQ6ZxE3L5drV1d8X+uYn2L1C9NgK
j8Aqy5edy40NOy0xNLz0G2OODSf9OmPDGPDc4sFXz3czcJJr8IVYvVbG/kA3
AwetEb1J/PSBbgZ+cs7H+K5958uMLfbCbHDT2rHz3cFLv+saJoKB4IyTS//E
sWEq9sEVG3YzMNlaGRsO2DhjwxWwxApjw2cvZA4bp/0aub5J7Ns8beAomIof
OL3anjo27ARDiM97ZWyYAWZiHzzi+vRgqr90MzAQvctrXu8bGo4y/o65ttLQ
MNyfYsvO3QwctFP0JnGSa3+LzFYYDSaDaVYfmv/6e8nn1PifGRvWYh/MAE/A
UDAQzLFt5gF7XF1t1xoaXmLrvmljbLEfDpgyNHzzr5LPCzb7h2cWHPv7zGe/
tIeDDnjFfA5IXxf6RoJvL6q2nxsbtrk0+OrfpfOVur7J0DAYu+ERuITdMMYh
se+IXDOHQ3PN+HwMvLHB0HDPf0t+39jwA8wxiZ+0nxafxLarSueKsWEn9+aw
9PuF4KiubzgLdjo2NsEXJ8UmmOL42PGpnMNaMNNxsfWUtOELT40dqwb/zFzl
zrJ566HhHxgJBjoztp6a9quU/spjw1GbD823jn2L32Klb8x4MAb8cXZiMuwB
75z/CjvIk1jJEc5YbWzY6NV9m8/Z6WvNsWEh+Of+GnfHoWGdG+r4waHh5A+M
DTvBP/d434OpYGSYeBJznpN+3adzcw5bwVWXZDwYBBY5N77tvLS5MtemjA0n
vY6fGFush0XgHVgHVli/6j84NmzkPl7Wtftknvr8fO7R5bm2+9AwDRy1y9Aw
I/zg2k25v3RvzvmlpfPvur5dlb2HhovmrLLh2PwyjAQT3RybNxobnoKL4CWY
ClbZd2h4aa6+4QWxWsyGleAe8fJJuUZwlLnBG2LoJH5yLg58NfOaxFJ3dTOw
lPNby4avjQ3zwEuwE0wCG32za+3hKzjqnpI3DV6ar294EzZ6uJuBe2AGWOzu
3JNjS/+v3oUqPyl7PzY0vHpndCfjvyO8cuDQsNk8fbPv8cx/sepngbq2ZNU/
U8ejh4aL7gz2WKhvmAo2glXgKdjoB76v0n205AViK5wEL8Flj+deGB/umcRN
T0WPjT/JtUn85HxLec3YcBoM9XQ3A1PBUT8t+ffm3Deu5p19wzJ4nkWr3Yt1
vkTf8BUc9fOqX7xv2AGOOa5sXmhoOqfV8S91fF/fcBo89rOuYUsYEmZbqvr8
Y8nvrXJi6S9SZVn91fFP7OsbdhFXxckV+hbnYRG8CGwAk6zet9jo/Kd940jw
Du+sflbpG074FH9f8kZVzq76l+q4bpVPl7zU0J71zn2LT7tUOb70lxFX+Js6
/rOOm1SZOjbOY70qy1b9lL7FjqWrfsmhzXfFkv/Ft1U5p+qWH9pYp/B7Q+vn
5Srb9i1Ov3dodomhG6QOJtgz3MbWvvGS/1PXtu9bXGenGPqzvvEuYviZ1c/f
+mbzvaV/z9js/XnfuBAx8yL3ZGi2nVzHdwzt/r9/aPaIvw9VmwerHFjlF33j
LcSuK9ynodmwX7iN3bp238TVqZ5v1d83NtuvB6zlTnX983X8L5/Ut37xEAdV
ORemG1r9AyXfP7a+L6/SV/1+VX8BDqCOu1W5xr0cmnxA33gLPvma0hl9q1V3
cckbZtyPhj/4JF9UdUPy+hvd8/S/6dD6EhdvLXlm3yp/2LfYK/Z/uvpZY2h+
cqY6HtY3vuKgvsUuMVhM1YfY9WjpP5Zv/FWl/2zf+IHrq26WOj+25Of6Fs/5
9a9W3Zax/646vrrK8SUf2bc4JnZuk3G1WaP6mbXOTy35hpJ3iv5r6virvuX+
D5b8uipn+t7rOGeVL5Z8Wx0/lDl+3fOMPb/uW2wUv9atPmer+gu8TyXvkX6e
q+PrqzzvecFcVc7wvtVx59hzct9imtj8m77l7vz9w3V9z/R5Tt9ih1h4Xt/i
jHj25RprjtK5zjsTHXnxt/uWa/KNH6nrF/ct1mzgfanzS6MvFohHv+1bjs5P
OxcLxLA3lu5t0bulb/VixzV9ix9ix5Fjy60f5B+9G7Hnq1V/UO7h9+s4d5Wb
9FXHO9L+4JJv7Fus2RzXUed3s9t7F33j8oH3VP/zVt2DOT80tokHv8tRrvpC
3zgSceCwjCUu3Fb9H1HnXy/553Wcr8ojJT9Wx9lzTx7rW477PXG09Oev+v/r
27vpHTXXp6vuyNh5f99igRgjt+IXVyz5bSX/amj5tHxTTi03/UTs59/FCTmt
fPYHqZuMEernT5yQf8o9xZbFXtFuseiQtaGLs1889cZ/qm9jW5cQn2bzbQ8t
Nsmpjyk7/9C3OLJwYtFb6IxtHUIsfvvYcnXXThhavJPrLj62NYZ3l/zboa0H
6OfXQ4vj+n9LHb+Xe/TnvsUXbeXvdN8q1gzNBmsVT5X85jwj8cvc3/mKGCZ+
LTm2PJwf/l1i6Huiq81E7h0//a6urR2skH7ESbn6Ermvy6f+G9XfKUOLoea4
Yu7D3/sWs+Stpw5tDvL5k4YWi437+8TiyXWdVdK/OPv+vA+LJtYtWfJ2Y1uf
cC7mW0NZKvNbLfpk7cXoPyXuyM/flRitHzhi+Tx3cX61zP30oeEx+tYjVk+f
j8AyY/PxSyeGr1T1fx7a3OXnMMDasX/60HgB8dH6hePKXcvlp0R2f+iv0rV1
jCmR4Qq5/Kol/2VosR4X8dehrX+I7zuMbU1CfD9hbBiDjtis7QbBKPiC9yTW
k619wC/r9zOuuwYD/DF6dM4dGobZMO3WT/3fh4Zh1FsngSXW6RpvsFF0PjM0
3oSdJ40Nz+AizhsaZ8Hml4aGedTDDHLtbRL7yfLUC4aGbeS/cMcWmd8/hoZz
1L93bHn15rlnW+S+/XNoazPq4Ra5/wczx60zXwVHs1aO6rcI1to0zwiO0RZf
AUfhH7YMjtom89Xntml72thyHBzIv4aGwciXDI2/ENN3HtuaDdk6z7bp87Kh
4S68x5lj40fgn13HhqPUw4NsgwlfHtp6z/aZ3w6ZI/xFZvvx8TG4PjgO77FL
19YW4ImjS/730PDG1OjAWFO7tpayc/SvGhpvAjudPTZ8RX+Psa33qIfd8Cae
4d5jw294kv8Mbe1nAkeNDVPJf78wNKy1a57/7nkH4ED57+7BW2ScAYyEK5nW
teNekeHBvWKzenpw1OT5zl1b59k7+v8dGg7EpVyIq4h8/tj4GnZeNzQeB677
4tDwIZv3HdtakfrjxoaBffsw7U55B+BEOTzb2YE32T/z2D/zwgHAgQd37TlM
y7OA6Q5IW3UHpr4Lzjw4utrAgVeODWeq/9/Q1rfgTFjywNyHm4bG78Ci08a2
hkT+8tBwLO7o6rFxNzDhMLY1JDL8icc5tmvY9dDYfPDYMK22+CdY8ZiuPafD
Yz/seFjaXjY23optx0UHXwJz4ndO69p8yEfmeETqx8j//3rfMCqsiwv6dMkz
jW0tCs68dmy4GufDZ9P5hH7Gttam/vah4WTci/UuOPKC0rljaJgZp3Rj1b92
aJjzY2PDzOpxUMdm3FuGxisZd+axrYG59sWx4Wo8GuyNq5netXWx4yO7Dyfk
/uCx1J/RNUxM/9Ku2XVibHN0Dutuk77dc3wCDuKert0XejgrWP6kfkbdSenn
zIyLy/nG0LA93gm3hP/CL71haLgXR3Tf0HA+2ToR3P250vnm0O4PXksugMuy
tvXqseF89a8aG/7X/265lxd1jfs6I/pfGlvugC+bNfnF9DwjfZ7eNf7szLQ9
dGxrdc5hezZba5NT4LIu7loOQL4h9/Ks3POz00Yu4D7iy3BlcojP5t6+Nvqe
w+pj4/jMefa0vSrt6F/dtZzi3MhvzLO4ebLvvuUaDw0tx5ngyMZ2T3Fw64yN
m5OnWD90vKb0X588CBd309jyIPp3l/zI0HKiffKMriv9uYaWC+DK5EkX5d7i
+uhcm2d6UfRvHhtu1/+jQ+PyYHi5itxGHiSXwg9O3svLcm/lWXi267uW85Dx
VYeNbc3y0txfXN4VOeLv5EY355zsvuDg8G+zR+fKyJ+PzsQ6auyxlnpe7rMc
Stuvlfy9oXGC8p05xpb34Ra/NbT8bnL99eo8C3zjdWmrD33Jxaxtqr/F+zC2
HNPzmjP3HBf5lbHltuRvD43HlKNZJ3W8tWvrp9ekf88FV3lb13LJG/Is5h7b
mjSbnxhafoernCs5Jtna9Y1pK7/Eb7rf8k284u1d4+a+km9/o+jfmnldHRsu
T9vrc//p4x7lePrB5+Hurat/Ku8wrvPe+Gm8PH8uR5Qz3te19+S26NC/JTbI
T/GT93ctz7wlOm8aW27rGl4RN4eXs5Z7R/TltGS86i1jy2Xwrm9OLkyWU98a
G340ND5UvnPE2NZZyfONbc1YjvnjoeXFONV5x5YXk+XOd+VeyXdxte6H/Bcv
+lDX8tP7Yqccnb48HR+Jl/xO7t89eRbmT98zwR3oB4+62dh4Yfa8JXOnK+/F
jeJF5eAPpU+57IOR5ewPRF6w+vhR9A5NvXt7+9jy8YdjL7v1/bOhcbvy9PmT
v9OR1z+a+4yjlbc/mef1YOb7i6Hl7zjko8eWs5O/2zebf5r5PZ579ezQOOdJ
7kT9DzK/J6L/nbTHBctpv5f6r4+Np8YVvC32fzs6T2Qucv8nU/+WyD/Le+hd
/XLum+fy867tT4ET4Adr4PJuOSk8bO379XmOP4r+i9GRU8v55f5D19ap5bVy
YfFPHORXrQ/L0+Qa9tTRkffJQdTjhK3dyT1gclz3j9M/rK5eLmOdU/4D91qn
gknEO1hxAgd3DRP6BuEFa4/qYchZog+HiOfWwGCJDydei9Fwtf7lAluN7R2y
N2GW6MMC4uNzka39kafnfv4g99l6lvjK/8vvcQHP5f3nj/gl6y2/zbdgT4sY
xddZ03gh74n1JfHj+rw/L+S7E1/0f0mei+/hiW4GP+X9t0cU9/JM1/iUF/NM
+Td9ilPusXv9bNee5+9zz5+OzZ6R/Zn4BxwAnuOPeb54GFzKAl3jI/AVOAkc
A67BPgR5P35A7o9zoS+32iUxWexeJW3xDGtEH8eAu9APvsKeOrmDPQO4AbJ8
Ex+AF8CZ2Bspd7a+L7eWj8u17e2U71tr2CH59bpd4wdeyjtpb6Tc2XoBPA/n
H9O1nFUeK2f9Z3S8n9umXh5qD6Qc1hqBNQt8Bxs2jA34A3sd5arW7u1XlA/i
8+3B8+HIyfZInrhr1/Im9Qd2Lf/V/1Zdy1nkVnKKacllYHW57X/yXdhbSMd6
tz17dOQ3n8+8Jtea5Sp4cnvn4H95A8wEO1mXhM9hexj7usjWkWdKvuC7g6nh
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

            "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
r3f+JtyVlzBLlPibxa/vcl+JvzU/j06qJ/72YTv/Pl7C+TlHShs+EX3KU860
5BM9Qy4P2s1bNoC1DD+bo0TPKxd3Z94jetIiJTHvyOu3dBrxtpDXz1NXKr1L
Xl+YLhURSvykaWYtQ4X4iUv+lcwc4ie9XgPlLRQ57zvdxN8Q3jjw6LzCVCHx
k00RzZLkudMWaUKHyXO3ntfRMkSe+7qaiT2e9SRHl+sduupLY309n2jxLgoe
F+XOzSC+Ih7+K72tjcLq+zq+Euo02j+v0HhAdeNNxdTa0iW96Ev96rhjIzlP
71bMdOCvw/7EiW1b3+ZiMqjZKXxLJ1SKM9ZSwiwcfj1qlrm/DX69rz/1x1HQ
mOo3emfEgajObjfRTAq1SclJimdofHEPO5Rqw0VsnY1qewHhTMHPcRnElxYl
Wz5IH+PCizWS+mKERrjz3xPfcjjY9VzznAs5v65KDrUKRJ85xg/qHMi+eY7e
kFtK9PQNqJk4RvRM/Cj66xbR86BsQOxXss+OvdoiamSf2/QWMWcSPSWk8mau
FB0ApXI6YRbJu5QOCdsPJO+65lpYPfxJ/Pyl1vI7hEd6N8soX83nQHhz9Dvx
KC52mqSUTrXQGJ9lvzySzcEtNQ/eYvL7Jmn/tFU/0Ng1q1Dx00biqxIBLG1p
CsmHtVs+EJ8btU0s/k76YtifbYP80T2w2bwyhTLtw8G1ck7xqlw89vGdYHt3
IC7XwLX6awtmP5x5IIDw+cLjUe467kxwuUaNd1tTIbVKfixvDRtDG3yEdT43
wcJnv6TDqR/4Oiyqd/NWD5hzTH8v1WGiorYv59DCFLy5xIoc/8fC8TS3W1bG
jeBa7FW5trQS6pHzHLo9ujGWUZy5wozGwpjXvw7a0biSXutx/jbR32hj6Bcx
JjbvVRl+/y4JhstaJuPrWWgXqxq9srUBpxPGtojuL4V8Z/DF7Pwu7NweWuM6
Qp7zqUhxSV0aDjfrdUQ+UxiUfVHsE8+FfMaARW0bjSypgoHNHRxEvG8bGWEx
YJomH5156jt+/ZAI9klioScnUMjWqB4djWx6+fIidB+Nv/hVrgsluxyV5x3s
xJHdezV8e9nY90Uib0SOi+Ws92vcnSlMqRS7psvRmNDTm95B9regKeaPZRAX
OXsU+PPJvhfKv4mJ7+fAyavK1T6NgY5HJw6mGCfC6cQmqXtvWajTtbrd/qoO
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
Ex7N11a64Uz6Yha/d/Ygjf8BnF0uMw==
       "]], {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAjn90D9k26r8cuj+VZRbtv5SW3qNc
uum/pIHsLpaF0r8g7OoXa8OvvwBiZYZH23u/arBXJFCD579Y7bCWDUzBv6jQ
M4fAzNO//ubgbhFz67/g0+IfvnPNv4ARH/whO6y/cPN6OcIE27/g3mbz5irq
v2jTLq8jn+S/uLZx7n5Cxb/Q/Mwl7krbv0BccLV22tS/SkyikvOF4r+A1WBF
VmbTv2wZ0VNXpt2/xoVzgqQK4b+0xxbAO6zivyAOSu4Ftci/RCeeUyeu6b8g
/mMji5azv6hp8aTdh9S/fvSPTb5P47/c/KIx9pfev2z1CUjPUOa/dIkpTNHC
279IO7cAD3Lcv1bp/sx8y+u/sEyi7cyRzL+0eSjx+0zRv2Lx1t2EzOu/+G7p
To910r+05swlstnpv3B1xgD5wdS/6JgmPAV66b9ENsBu
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAmmInDx0Q5D+kURi0/wfRP0AfMJ12
Xrk/HtwPsN/T5z9k4bBxBgnrP1jq4rk+8NQ/iEIgmXQi5j94UGcc6SnoP55L
OKb03OA/cJLEBj0KzD+wAUuFCqXIP4BXLwjQtOg/2quwmS8Y4j9gIWgudGTY
P8jPEQQDAc8/OhdegSEC4T/gZUWNTzPIP0ytmt0d2eY/QGb2CV+Euj+4KC+9
WXnDP9L7AtmTVuQ/ABVP2ad4oT8m9u2+cN7jP26LBf6P0O0/gEIOTh/Kzj/M
XFr2CtPYPxQJnXIcS+c/0GMwOBvJyj9aZtmdGwjnP7K7d579GOE/QMjSXNhE
yz9EfdurFB3WP/62SJoOd+E/WoiXiFaS4D/ycN+vrFDoP+QmOKZXZ+c/5DOX
Ufm47T+IDjxhvzrRPzK7hOLlu+Q/wFjOxi4P0j9pYJt4
          "]]}, {}}}, {}, {}, {{}, {}}}, 
     GraphicsComplexBox[CompressedData["
1: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
KpLOs1/w/wzvWJg=
      "], {{{}, {}, 
        TagBox[
         TooltipBox[{
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1Gl4CAQcBvDNNddsDNvYsM3M3JsZtmGzyzEsR0kRQoeaInLfV1EU5eig
290hdDgqulwddIjoVHJUyn3+9vjwe//f3+d5/zEDh3UvCgwICLhJFN8SlKQU
pSlDEGUpR3kqUJFgKhFCKJWpQhhVqUZ1wokgkhrUJIpoalGbOsQQSxx1iace
CdQnkQY0pBGNaUJTmpFEMs1JoQWptKQVrUkjnQza0JZ2ZJJFe7LJIZc88ulA
RzrRmQK60JVuFBZ3SHd60JNe3Mwt9OZW+nAbt9OXftxBfwYwkDsZxGCGcBd3
cw/3MpT7uJ8ihvEADzKcETzESEbxMKMZw1jGMZ4JTGQSk5nCVKYxnRnMZBaz
eYRHmcNcHuNx5jGfJ3iSBSzkKZ5mEYtZwlKe4Vme43mWsZwXeJGXeJlXeJXX
WMFKVrGaNaxlHa/zBm/yFut5mw1sZBPv8C7v8T6b2cJWtvEBH/IR29nBx3zC
p3zG5+xkF7vZw16+4Eu+4mv2sZ9v+Jbv+J4D/MBBDvEjhznCT/zML/zKb/zO
Uf7gT47xF8c5wUlO8Tf/8C+n+Y//OcNZznGeC1zkEpe5wlWuUTz+QEpQklKU
pgxBlKUc5alARYKpRAihVKYKYVSlGtUJJ4JIalCTKKKpRW3qEEMscdQlnnok
UJ9EGtCQRjSmCU1pRhLJNCeFFqTSkla0Jo10MmhDW9qRSRbtySaHXPLIpwMd
6URnCuhCV7pRGHjjh14HphCO0Q==
            "]]}, 
          RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                  RowBox[{"-", "4.073273100492634`"}], "+", 
                  FractionBox["8.47286165406671`", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"0.6764173117218596`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"6.871131539303637`", " ", "x1"}], "-", 
                    RowBox[{"6.071758151053727`", " ", "x2"}]}]]}]], "+", 
                  FractionBox["2.208236874143999`", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"6.811369926279548`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"3.858713578150712`", " ", "x1"}], "-", 
                    RowBox[{"3.367125628493899`", " ", "x2"}]}]]}]]}]]}]], 
            "\[Equal]", "0.5`"}]], 
         Annotation[#, (1 + 
            E^(-4.073273100492634 + 
              8.47286165406671/(1 + 
               E^(0.6764173117218596 - 6.871131539303637 $CellContext`x1 - 
                 6.071758151053727 $CellContext`x2)) + 
              2.208236874143999/(1 + 
               E^(6.811369926279548 - 3.858713578150712 $CellContext`x1 - 
                 3.367125628493899 $CellContext`x2))))^(-1) == 0.5, 
          "Tooltip"]& ]}}]}, {
    DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.2]], BaseStyle -> Automatic, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.2]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Automatic, ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "ScalingFunctions" -> None}, PlotRange -> {{-1, 1}, {-1, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJwVl3lUT90XxlUkIqVBkpI0oFGlueeNqERIyNggUUmGhCJFkia8iRJ5RUmU
RBoklQaVikaNvvN0740UEel3f3+cte76nHvWWWef/exnHw2fYLf9ElOmTGmg
hxg9/v8dypzO31Lfhj3iLjNUffNQFr06ePgrAzGrNVzfzWjH72UioW1kAbaF
/qWy1Jm4kWVVZLO+He86DFqDXAvx7UDpoZ2uTGRPd1d9ltSO6xHHX9xRfYHE
HSGEzFkmXvoHXdD62A4f3ZK0ZlERlroYBrx9zER9U4woTb4DBm1/IiZKilFr
IxKc7GWiW/+/zTLbOjAebu+rf6kU3gZZB/RmsMC/UlpyPrUD77RinPdsfYUJ
dS8ew5yFseE29bHeDlxvbTRI1HyNVLkF+1P8WJjuTsYELuyE1+k5Cq+HK2Aq
0cV2TmFh3stpQ589O3FTLvfMD89KfBi96vP3LQs6yupb3TM7cdZvfbCMYxUO
8VyYhd9YMA+zKH/H6cS+V0Pe2gbVkPok6XVAgw2n/s2atjpdWCd7zd1O8S3u
N1QNLtjEhoddYNwz/y4Y7zdx3PbnLfDqzJ4PEWwc/C96WOtJF+aVdVoeZteg
74l5f3QeG6fEMzxuDXVhQuaUXkxjLU5mfNtp2c9GrG/xGxnjbnD2qahnPKvD
3Kt5PdRMDlLrPmhfON6NhpJyuZep9ciPOuiRaclBjq4ocayoGwWzPae2nHuH
dcc1u7cd5KAkTuJ74M9u3PARG+P6NYDnO7hV+iYH70jV3QyrTzhTfF84saER
57eldbyp5eCT68q37mc/Yd+stf2KZk1Qc3LfEjLKgaBg47KGN5+wzlvQoq/6
HqWWc9p0Nbn4Odf/mq14DwxfxlWtkWjG1uWNmwY2czHjxPmfzxx6oCSt/2KP
qBnDqhdbr0VyMb873VP7Ug8mPFuzT3xsQYLMP65rn3Kx1LKo7lZDD9gvjqYl
lrRCd8rv9+MDXFimt+jPmdUL7tSZdW0bP6BmuMjl6SwenCf41y+49sLDcNeb
vW8/wIt9pHGfNQ87PMX+jF3tRdOOJyWilR/xp2O5s3IADwFVKvsOtffCLnri
WWjuRzqOvPr3qTyEaZo2MhT7UJjv+lhcrQ0mJffWRtXzEHdxg/FWjz5o9dx9
kHStDa2Pdtea/eDhFt8vteFWH1Ilhu+oTGtHYPo8B9ESPnKdIydtB/ogbbDq
ZvapdkgmtlVnbOGj7HGaX6F6PyI8kq+uINuRGZFov+U8H42znzdr+/Tj23nO
5QrPDtgdcaqc/oyP3uD3pukP+rE/z+zCuvYO9HpLoPwzH6KP3PQ5/H586o45
07W2E6FbKl4fkRFg3GRSPHrpAFzEP53wKevE3DWnbbRsBZh5QzngZ+AAKvSW
Bg/pdyFvpemrnkABVH4afzyUPwDj7WEHw+51wVn3i2XSLQGW7XSxYH4dQFZU
k7ekYje483NLVjUIYF3ue3erySCUn6ju+je2G1HS+83HxgRwUYuQbDwxiPiu
IHe1P91QnVB/+VhbiF2RN4PsSgYxOeXNhtzgTygZ6jX12ipEIKugo3B8EEeX
yzquZH+COyPluUK0EOEOjdY6tp/B2er9T/W2Hnz9uGlFQ6EQCdnszPRzn+ER
WWjp2tiDhLfSz84yhbgtNTFDtvozmnIlTHpte6FbVGe4QlaEbWbxFqvEGbDr
dNfze9aLmuyofJ6dCHt58w6d0WSgcDJL69uSPnim2uinB4ngd/PB3ZcODGgt
G1OLSO3D78tjjzfeFuGwk3H71/0MpLo7Kc+c1Y+b4YXLpjaJEPrrteTySwxI
n0uTu3GuHyuCgh6V/BIhIned1f4cBs49Es1cPNKPlr26ukG6BGJ2dQfdbWBg
uN16ar7fAAI2sbM1thNImuV7r0fEgO/fhAnL3gFIrsrQ6rpI4Mbrrx3ys+j6
pzv4o3bDIDJNdjyIe0Eg4/BZKVd9Jly2GH7dXDUIOy0FTbAJZKvPtIml627F
2UjhgOln9Ci13huRI5H/4UZwdTATxjkfWf45n3FCKm5Rzj8kXkZp3v9zlQk3
f7mh8dkMyI073N0dTKJiRUHXykImEv6WiiodGXhCTC6UyyBRx7aZebSdidpk
H35MFANOA2W3a9+TaLneYPt4lIlJXWnO+lcMcFpOLAj7TWLR9bLiH3NZMHNS
9eINMfAlv/m/9yoUJIxCKnyXs7Av/G+vthJ9vkBPk10LKPCa9GvbVrNwLZ+x
9YAtE5W6w7VCmjce4Df9s5uFSmb1h4e+TORwz3ucUqWQJ3GvLT+EhSGFLBdB
PBPXMhUIyYUUrt3d2aOayIKq06U63edMhHlmn02heYi1AiMui4V14f72/rSv
+KhayC5Ro7C9u5n38zULp/Ndyh+JseDS05BZSHPr45covy4WHjL1zUW6LJjc
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
tJ7/B5U7nuo=
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -287.50000000000006`}, {
                7.500000000000001, 287.50000000000006`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -178.7964876033058}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -178.7964876033058}]}, {{
                    7.500000000000001, -59.994834710743795`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -59.994834710743795`}]}, {{
                    7.500000000000001, 58.8068181818182}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    58.8068181818182}]}, {{7.500000000000001, 
                    177.6084710743802}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    177.6084710743802}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.500000000000001, -267.8977272727273}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -267.8977272727273}]}, {{
                    7.500000000000001, -238.1973140495868}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -238.1973140495868}]}, {{
                    7.500000000000001, -208.49690082644628`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -208.49690082644628`}]}, {{
                    7.500000000000001, -149.0960743801653}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -149.0960743801653}]}, {{
                    7.500000000000001, -119.39566115702479`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -119.39566115702479`}]}, {{
                    7.500000000000001, -89.69524793388429}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -89.69524793388429}]}, {{
                    7.500000000000001, -30.294421487603298`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -30.294421487603298`}]}, {{
                    7.500000000000001, -0.5940082644627982}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -0.5940082644627982}]}, {{
                    7.500000000000001, 29.1064049586777}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    29.1064049586777}]}, {{7.500000000000001, 
                    88.5072314049587}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    88.5072314049587}]}, {{7.500000000000001, 
                    118.2076446280992}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    118.2076446280992}]}, {{7.500000000000001, 
                    147.9080578512397}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    147.9080578512397}]}, {{7.500000000000001, 
                    207.3088842975207}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    207.3088842975207}]}, {{7.500000000000001, 
                    237.0092975206612}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    237.0092975206612}]}, {{7.500000000000001, 
                    266.7097107438017}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    266.7097107438017}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -178.7964876033058}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -59.994834710743795`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 58.8068181818182}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 177.6084710743802}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontFamily -> "Times"], 
                    Directive[
                    Opacity[1], FontFamily -> "Times"]}, StripOnInput -> 
                    False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], FontFamily -> "Times"], 
                    Directive[
                    Opacity[1], FontFamily -> "Times"]}, StripOnInput -> 
                    False]}, {}}, {
                    Directive[
                    Opacity[1], FontFamily -> "Times"], 
                    Directive[
                    Opacity[1], FontFamily -> "Times"]}, StripOnInput -> 
                   False], "GraphicsLabel", StripOnInput -> False]}, 
                "GraphicsTicks", StripOnInput -> False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.293416, 0.0574044, 0.529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19561066666666668`, 0.0382696, 
                    0.35294133333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.293416, 0.0574044, 0.529412]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.293416, 0.0574044, 0.529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.293416, 0.0574044, 0.529412], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.563820859082933, 0.527565423056382, 0.909498741130694], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37588057272195535`, 0.35171028203758803`, 
                    0.6063324940871293], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.563820859082933, 0.527565423056382, \
0.909498741130694]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.563820859082933, 0.527565423056382, 
                    0.909498741130694]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.563820859082933, 0.527565423056382, 0.909498741130694], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.762631, 0.846998, 0.914031], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5084206666666666, 0.5646653333333334, 
                    0.6093540000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.762631, 0.846998, 0.914031]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.762631, 0.846998, 0.914031]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.762631, 0.846998, 0.914031], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.941176, 0.906538, 0.834043], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6274506666666667, 0.6043586666666667, 
                    0.5560286666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.941176, 0.906538, 0.834043]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.941176, 0.906538, 0.834043]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.941176, 0.906538, 0.834043], Editable -> False,
                     Selectable -> False]}], "}"}], ",", "#1"}], "]"}], "&"}],
                ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "0.016897627007086833`", ",", "0.9854992801158478`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684331439117056*^9, 3.6843314919221015`*^9}, {
   3.684331548285509*^9, 3.6843315708064566`*^9}, 3.6843321872826037`*^9, {
   3.684332228499959*^9, 3.6843322709292707`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"ww", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"steps", "=", "400"}], ",", 
       RowBox[{"\[Eta]", "=", "20"}], ",", 
       RowBox[{"m", "=", 
        RowBox[{"Length", "[", "X", "]"}]}], ",", 
       RowBox[{"er", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"s", "=", "3"}], ",", 
       RowBox[{"s1", "=", "2"}], ",", 
       RowBox[{"s2", "=", "4"}], ",", "d2", ",", "d3", ",", 
       RowBox[{"s3", "=", "3"}], ",", "g", ",", "o", ",", "dd1", ",", "dd2", 
       ",", "i", ",", "j", ",", "k", ",", "w1", ",", "w2", ",", "iter", ",", 
       "z2", ",", "z3", ",", "y2", ",", "y3", ",", "y1", ",", "b1", ",", "b2",
        ",", "db1", ",", "db2", ",", "dw1", ",", "dw2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"w1", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"s2", ",", "s1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"w2", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".1"}], ",", ".1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"s3", ",", "s2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b1", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "s3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"er", ",", 
        RowBox[{"{", 
         RowBox[{"w1", ",", "b1", ",", "w2", ",", "b2"}], "}"}]}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"iter", "=", "1"}], ",", 
        RowBox[{"iter", "\[LessEqual]", "steps"}], ",", 
        RowBox[{"iter", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dw1", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "s1"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dw2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "s2"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"db1", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"db2", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "s3"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"g", "=", "1"}], ",", 
           RowBox[{"g", "\[LessEqual]", "m"}], ",", 
           RowBox[{"g", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"y1", "=", 
             RowBox[{"X", "[", 
              RowBox[{"[", "g", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"z2", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"w1", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                   RowBox[{"y1", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "s1"}], "}"}]}], "]"}], "+", 
                RowBox[{"b1", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "s2"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"y2", "=", 
             RowBox[{"sigma", "[", "z2", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"z3", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"w2", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], 
                   RowBox[{"y2", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "s2"}], "}"}]}], "]"}], "+", 
                RowBox[{"b2", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "s3"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"y3", "=", 
             RowBox[{"sigma", "[", "z3", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"d3", "=", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Y", "[", 
                  RowBox[{"[", "g", "]"}], "]"}], "-", "y3"}], ")"}]}], "*", 
              RowBox[{"dsigma", "[", "z3", "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"d2", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"w2", "\[Transpose]"}], ".", "d3"}], ")"}], "*", 
              RowBox[{"dsigma", "[", "z2", "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"dw1", "+=", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"d2", ",", "1"}], "]"}], ".", 
              RowBox[{"Partition", "[", 
               RowBox[{"y1", ",", 
                RowBox[{"Length", "[", "y1", "]"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"dw2", "+=", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"d3", ",", "1"}], "]"}], ".", 
              RowBox[{"Partition", "[", 
               RowBox[{"y2", ",", 
                RowBox[{"Length", "[", "y2", "]"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"dw1", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "+=", 
                 RowBox[{
                  RowBox[{"d2", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], 
                  RowBox[{"y1", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "d2", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"Length", "[", "y1", "]"}]}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"dw2", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "+=", 
                 RowBox[{
                  RowBox[{"d3", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], " ", 
                  RowBox[{"y2", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "d3", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"Length", "[", "y2", "]"}]}], "}"}]}], "]"}], ";"}],
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"db1", "+=", "d2"}], ";", "\[IndentingNewLine]", 
            RowBox[{"db2", "+=", "d3"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"w2", "=", 
          RowBox[{"w2", "-", 
           RowBox[{
            FractionBox["\[Eta]", "m"], "dw2"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"w1", "=", 
          RowBox[{"w1", "-", 
           RowBox[{
            FractionBox["\[Eta]", "m"], "dw1"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"b1", "=", 
          RowBox[{"b1", "-", 
           RowBox[{
            FractionBox["\[Eta]", "m"], "db1"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"b2", "=", 
          RowBox[{"b2", "-", 
           RowBox[{
            FractionBox["\[Eta]", "m"], "db2"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"er", ",", 
           RowBox[{"{", 
            RowBox[{"w1", ",", "b1", ",", "w2", ",", "b2"}], "}"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"w1", ",", "b1", ",", "w2", ",", "b2", ",", "er"}], "}"}]}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.684297454573798*^9, 3.6842974551674414`*^9}, {
   3.6842975661476803`*^9, 3.684297813893073*^9}, {3.6842978548605356`*^9, 
   3.6842978683468313`*^9}, {3.684297937529454*^9, 3.684298022935981*^9}, 
   3.6842980702649636`*^9, {3.6842981609940224`*^9, 3.684298230810175*^9}, {
   3.6842983629477654`*^9, 3.6842985402320256`*^9}, {3.6842985944538493`*^9, 
   3.684298726231551*^9}, {3.68429913260956*^9, 3.6842991502294917`*^9}, {
   3.6842991857509265`*^9, 3.6842992576813264`*^9}, {3.6842992949863133`*^9, 
   3.6842993099476404`*^9}, {3.6842996987716093`*^9, 3.684299907065999*^9}, {
   3.684299938933182*^9, 3.68429994216777*^9}, {3.684300010223942*^9, 
   3.6843000494666495`*^9}, {3.6843002514991837`*^9, 3.6843003206156836`*^9}, 
   3.684300350900594*^9, {3.684300488190982*^9, 3.6843004931953287`*^9}, {
   3.6843006553246136`*^9, 3.6843006554964952`*^9}, {3.68430078055259*^9, 
   3.684300784570963*^9}, {3.6843008915831294`*^9, 3.68430090160159*^9}, {
   3.68430093855643*^9, 3.6843009443067675`*^9}, 3.684301002348587*^9, {
   3.684301048904273*^9, 3.684301051654647*^9}, {3.6843010971979713`*^9, 
   3.6843011375116987`*^9}, {3.684301231926306*^9, 3.684301236634614*^9}, {
   3.6843109499840355`*^9, 3.6843110987546115`*^9}, {3.6843111850379534`*^9, 
   3.684311204428686*^9}, {3.6843112738141356`*^9, 3.6843113782914*^9}, {
   3.6843114361137176`*^9, 3.6843114361760693`*^9}, {3.6843297890193057`*^9, 
   3.6843298507442737`*^9}, {3.684330230848545*^9, 3.684330238148389*^9}, {
   3.684330278655273*^9, 3.684330314521077*^9}, {3.684330377460848*^9, 
   3.6843303786406326`*^9}, {3.684330498476164*^9, 3.684330587336139*^9}, {
   3.6843306497605705`*^9, 3.6843306775500145`*^9}, {3.6843307335481787`*^9, 
   3.6843307344257603`*^9}, {3.684330922611661*^9, 3.684331064457799*^9}, {
   3.684331247369197*^9, 3.6843312521413636`*^9}, {3.6843315885192137`*^9, 
   3.684331591786381*^9}, {3.6843316303309617`*^9, 3.684331743841299*^9}, {
   3.684332345434719*^9, 3.6843323495314384`*^9}, {3.6843324459304175`*^9, 
   3.684332473139475*^9}, {3.6843326231410284`*^9, 3.6843326234032025`*^9}, {
   3.684332768440465*^9, 3.6843327685245185`*^9}, {3.684332803869977*^9, 
   3.684332804988719*^9}, {3.6843329211788335`*^9, 3.6843329247081766`*^9}, {
   3.6843329822408247`*^9, 3.6843329824089355`*^9}, {3.6843330430241666`*^9, 
   3.6843330433423767`*^9}, {3.684333123545411*^9, 3.6843331236074514`*^9}, {
   3.684336312676955*^9, 3.684336336072484*^9}, {3.684336399518593*^9, 
   3.684336400739402*^9}, {3.6843399188622146`*^9, 3.6843400293855715`*^9}, {
   3.684340079102566*^9, 3.6843401282742023`*^9}, {3.684340192901094*^9, 
   3.68434028733877*^9}, {3.6843430599699335`*^9, 3.684343067892192*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"7.6875`", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1.2972384213116661`", ",", "2.6104307087802714`"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "4.314900282242974`"}], ",", 
                 RowBox[{"-", "5.34003694112062`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2.512627778519026`"}], ",", 
                 RowBox[{"-", "4.493927883775491`"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2.719893856633978`"}], ",", 
                 RowBox[{"-", "3.4138045476042573`"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, 
                 FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                 RoundingRadius -> 7]& )], "}"}], ",", 
             RowBox[{"{", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, 
                 FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                 RoundingRadius -> 7]& )], "}"}], ",", 
             RowBox[{"{", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, 
                 FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                 RoundingRadius -> 7]& )], "}"}], ",", 
             RowBox[{"{", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, 
                 FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                 RoundingRadius -> 7]& )], "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 773, 27842405773387785313, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 773, 27842405773387785313, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 773, 27842405773387785313, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[773]]], "Output",
 CellChangeTimes->{
  3.68433246231229*^9, 3.68433249776782*^9, 3.684332637049261*^9, 
   3.684332779898067*^9, 3.684332837563339*^9, 3.684332960330284*^9, 
   3.68433301404093*^9, 3.6843330743359475`*^9, 3.6843331575033417`*^9, 
   3.684335045981406*^9, {3.684336338235918*^9, 3.6843363456728554`*^9}, {
   3.684339979602527*^9, 3.684340038826836*^9}, 3.6843401042622643`*^9, 
   3.6843401361073985`*^9, {3.684340262290146*^9, 3.6843402942593627`*^9}, 
   3.684343079742056*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{
   RowBox[{"X", "[", 
    RowBox[{"[", "45", "]"}], "]"}], ",", "ww"}], "]"}]], "Input",
 CellChangeTimes->{{3.684332510439231*^9, 3.68433252211598*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.010751590384493597`", ",", "0.017237897294997414`", ",", 
   "0.9847714562488503`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6843325184785657`*^9, 3.6843325224872265`*^9}, 
   3.6843363587715487`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Q1", "[", "w_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Norm", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "w"}], "]"}], "-", 
         RowBox[{"Y", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6843325684077034`*^9, 3.6843325747309003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Q1", "[", 
     RowBox[{
      RowBox[{"ww", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", 
       RowBox[{"ww", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.684332596342243*^9, 3.6843326034679728`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 401.}, {0, 1.3336600052655119`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.684332615906228*^9, 3.68433264604423*^9, 3.68433278758517*^9, 
   3.684332859632986*^9, 3.6843329789316273`*^9, 3.6843330315895777`*^9, 
   3.6843331175254154`*^9, 3.684333176872198*^9, 3.6843363660984125`*^9, 
   3.684340025984312*^9, 3.6843400648961363`*^9, {3.6843431163773713`*^9, 
   3.6843431380197353`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DensityPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x1", ",", "x2"}], "}"}], ",", "ww"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}]}], "]"}], ",", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X11", ",", "X22", ",", "X33"}], "}"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"h", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}], ",", "ww"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0.5"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6843326572226496`*^9, 3.684332748414173*^9}, {
  3.684332793504097*^9, 3.684332794778944*^9}, {3.6843328793040414`*^9, 
  3.684332893546494*^9}, {3.68433317992122*^9, 3.6843331813781867`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
Idd7N0DPeHpW9Iyfzc5TPheyu0af0jv+BMafTGc+57efYbcZ76+K7vgKPf1r
PeBf0NkPesrjSvnhquiOO+yTef1WdMfv2+LzfedOP70vjDwfp39e/OV6xxXv
0y5elx2AOR+YdRJ/3tFZn98Z02/v5af3Rc98ctzZ0ZRdZfy7Vx69L/tNP1lW
fsJ+0y6Ola96P0u7PdPzF0XHPrCjzEP7sue0s8vCGSffDRmv39V5bcfjuC4/
GcdNZ6f2q6wbNoVZL/V7Lb1t5lmvt7jCPQB/8L3A+dPvS9Ab9gc9+XlRcXoU
2/OK6yMfT/V+51zfrZ2XPJiffcCWp7hXpf22vn7mz6Xi+kX3PsL5Md+DPlE+
W6huPqt7DnJ6nM8TxfeWV92Pd16FzvOcYzwX33mcll3gJ9gVfGIXyAW74nn0
BIZ/5qMX1xnQU17L8gvo6efLivfQsePMfy/KbpHf49+JtDiU9/Av1G+eHeV9
4rr8FHml3a/LzrF/6Pn77ZBxZqU49eo9cWAzJJ+bIeWwLf6gY5ejXt5UfBx/
v1MeavcPcMa3t4pvb2t/47zPn6v/tZy7DoLOebP/tVI/Cfuk37SWnV6V3pBz
xvkn3XtJ16f4T8a7V0XP/trNnNF2k32Um86OUv6bip/MR2/MJ95nHXZf8/GX
tJtnqsuWXZ2GH7G/5QC2n2V/fql7evtO3nVy9v3Ou/evU/ecx+v8y+79Zsbj
di/Lvkkfp1N+i7KbpF/P026fFmY/5Dx1T4ee8dn3kQvlzXaPze+1W53F+fP9
3Up5fF32nPX/q6qT0i7po151dgpfxB/sczzH65Ivv4Oxa87j+JTfGV6WvzE/
v9c8Vb3V/MAjcidPsR/2S55xPeLvGbLv2u6l2Ed+l7Eq/aU/r9QXulIc33R1
ff7dzVdlz1nPPq14mfl5r3O7X9/qQZ97iq/Mdy1PgbGjfP5Wdch91+8hnpOH
fC/P+rS/x+M36BM6GH2nXbd7bH4nsO7qCNZHj7n+6w77vI5L2CPx03VUPn9R
es73M+eqGxpmPezVcdV50P0cx+/8LuR8nnXn+dz1rvMrfsQ875vf75x2fR77
n79LcV3sfGHMc+7zZb23kB5P1V9pmPWQc34n+UT1eZ/X/H2N8xPPZbw/KT9K
O193dvS4H7Q4OBUnp/p8rOd7Odh+iN1O9W39fsr9//SD9p0r/pZ12Gt9/7Ef
Mq7th/Sjvo/t91/QGTOOrCu+43/Q/VzGG9bv+yTQU/9+H3FbmDic/azWJyLP
ZL/K/amGc73TWifttvWvUk9nol90eoTOuq4joOf7o3v1sd+Wf8EXON8nPiu5
Znx7q/tV64Pmd9hXXd2V341cql912d1/oGPv+AmY+gb/gg7O71Kedf0tY/bH
nt2/wq4yju9U1+zLDp3P8Yu0z8083+cfd33R8Xe+V9vL/zblZyP9ep524b+b
afcd8nPWJ+3vWrOP0sdx8ivx13nK36+mnX3WfR/q/JX08+4+AkbO7MO++Z1K
61u5r+X34lN2wvPoMftuN1389f3D9w38Aj2B0Qd2APb9A5x/r3TXxfV8f97u
H2DkmP2JU8XV0+77J57nfDwP5nnk7e+J8De/RwG7P5J9ofO57zf5vcO+/Ca/
K96rj7XR9wU3ur+vyz94Hr7QI/LjXK5j8u8LP5t/feDzj/OfHdb52/yjA/2j
wlPv0fydbb73/rT8Lv8+91R/x3cyZF/pVP229nee7OM8kHFpWXLz35WgZ+s1
4/q/a//MI+86fxn3afUCOPPmK+XDtfL5St9TXA353n9V9gPO9zebkhMY/aSf
nsm/VoXt52DWwz/hEww98+pGcbb1I5kHRq+WS9Zp7Z6d+16VXWTd3t43+f1X
xpMz9VHOhqw3lt3fM2G3+JHfd/E8dpx94tOyQ+w2n39ZeTH7+3vdZ1o/FZz1
1Dv1y3bKTzvdr+gnHHf3FJ5H78ib9TwS14gfxBW/d8ePU27nD3b/D9UD7d4D
5nx+z5J2turiZr4nu+jiBBi9Zv78anA+tZ0mbu/RM06074syD58URn+cA/vL
vH9Z9oH9JG7ffeXfc+wH3+PB6PGvh9//MKBHMPr8PwEzhI4=
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxV3Xn8b1P1P/Dzfp93hgyVoUhEkZlMJcks85x5uuZ5yJRkuobMJDPXTEUa
lClziVRSKipSEpooQ+Qr1W89P/v1fly/P/bd673Ons7+nLP3a73W2ufOt/MB
m+4/7Lruiem6rq98yUHX+f2uSkuXvFSlutRtVvmmleYveZaulVF+tkqjSm+r
NGt0fn+8/lmh0rJV59hSrlD5RyvNW9femfYXKv1O1dAMlX5daddKn6gye1Q+
U6Vnq8wq9Xvmyueu9LEqv0b9Xr3S7OlzmkrvTj5tpfnStjF+ILlxfbTqblz1
/lLyScZTae36/clKaw5aG09Wn3tVWrd+/6HyfSttWPKqld5X1xet9MfSHVBp
89It1jW9sS2VvvX5wfRpbuZPbryLp+w85rnS+7s2Hx9Orv7Sb2njzBrjMpXW
r772rXyfSn8r/ZWVX+F36Q+usWxd+QulX7FrY9LPJ+r6tqX/e8krVFok499k
0OSPVdqu5OUrX6vSSpWWyLi2H7T7WaXSpJJ3HLRx/aX6OqzSzvV7xvrbzlDp
xdJfXn1dVmnX0h9R13ev/GXPQPo0pm38/Sv/ZKW1u9avMRxS+vVcr/SPqntU
pf1Kt27GrY31kru/DdxbxrtXlduz0solr5P21DmvxrJypS3r2tU1xhMrXVq/
t0rfyn65fn+p0oGeN89A6T5VafOuyca5RXLzs2Vy9SfXGA+qOv8qeeu0Z7yf
Kd1hgzbGuys/v/JrK+3i/Un7x1Q6oNKBlf5Z7ZxQ6XNV9vXKT6p0TMnfqnF9
stJRJe/6lnHtnjEZy+lV9tS6/t+Sd8t11/bI9Yl7rfs+ftDGeFu1d2ulE+v3
dyrfsNJJJa9V+eTK/11lDh60ce5c6Y7Sr1vpdOtB5WdVf2eWfF6lcwetn4NS
1v19utJO+X1wdMa+Xo3hi4M29u9VO9+tdIE1IXOg3jSlO7fav6j0c1T591Sa
puT1S/+FyrtKxw1a++ocVPpPV+pLd1/lm1eaUvKF1cZllb+t0tmDNs9H+3ul
H+O9YtDGd1ylSyqdZi7NcfU5X6WvemYqXVXpkNI/WG3/oNK1nnn9VB9fLnmu
KvveStMrV/qDK81c8kOV/7jSdSVfUWW/XvkMlR4p3c8q3Vzy5ZWOTN9nVDoq
4zwzuWfkm5mjsyp92zMxaPdhrEemzsp5X60f76q2r6r+bq1yN5T81UqfLXlK
6uhn2xrvl6vMXaW/vvJ7Kn9XpW9UOrWuX1Tp4q7JxrZNld+60h11fatq7zuV
f6XS9qX73qCNd/vSP1zyeyr9puRfV/q+Nqv9ByufrdIHq/yhpb/N81zyLpV+
VPJuld9Y5R5Sv67fUPIDJa84anvGx0q+19/V+1rpureMcfcq88ig/Q33Lnmv
Sk/U719W+kXue65q4xZ7S/1+quTfV3qs5MOr7A9L/2bJc7uvkp8s+Sf+9lXv
W5V+WvI15r7STV2Tvcu3VPpSxvMH81H5rZWeKfmPgzbGBav9D3k+6vefq/0/
VXqu5PdXflf19eeSF63ri1Sa1zNcur+bJ+t1lXmh0vMlL1HXF6/0u5K/W+3e
mLE9NWjyvd6p6IxzJ/fonrT5lrF/pto4rNIbpX/eHlLpr9boyl+q9M+SP+Dv
VuN4zfyU/JlKH7IuVfpLpdurnZcrf2nQ5mDpam+pSgvX739Uurt0P6n0Ysn3
VP6wOeyabJw/S+4+Hklu7D9Pbrwfqj4fqjH8r9r4aeXDSouW/Lu3tPf75No7
xjNQZaaptGfVnbbyJar8fyr9uK4/Xum/3snKn6j0267Jxvlkcu0uW+18tur/
a9Cwybxd25ufSj/Ge1Tf8NDT3rdBw0nKwkEwBswB+8ya3zDQbPkNp8ye32O8
MnvqzJf+FqmGphu2+fiFPXbYsJOGjusbRtpt2HDUM6U+sXQn9A0vwUpwEiwC
G8EYMBPspi+4yFpmPd6tm4qN9H1ttXFN3/bcMV6BPX5vHx427AEfzZ8x/7Z0
ew8bdjq5b/jpudK/YB8bNgzwxdKf3TfsZEz2fzjAuBbPb/Nr7Vqim4qBlsyY
lspvY1w6v8+wF/UNm8GhS2ecBw4bNv1ryefW9XP6hs0urvyivmGjP1WZQ4YN
D8BEMNDyGRNcMcZH8o9lfCvmGswI/y2SscId8MfqwT8vlXx+sNnzXcNOK2f8
cNMqGf9nhg1L/aPkKVX2kr7hKPe8ctqFm+Ak+AM2gz1gJmOFO9bK+NbJb+Nd
N7/HOGndjA8GWb9r+GiDtH9V3zDTK6kPI2yZ+lvn94FV5oBKr5X8co35uGHD
SPAOnAQfGB+8AZeMcdLm3VSc5PfRw4ZP/9m1NdIabu2G97bOOD+VZxJW+Frf
8NPrJb9SdU8ctv3rxtJ/s28Y6bXSnTxsuOjm0t3UN7wEv8AuO+V9+2CeHVhs
28zD5nn2d834ds9v490jv2GlPTIP64wafnqz5FOrz1OsK127f+OFc94s/RnD
hqPu7BseO9I7C7cMG3aCfQ5JX7/o214+46DhGpjmgLQFm4wxlBzOWX/U8BO8
Naq65w0bdoKP4BsY4IvDhskGlTYs/TyVLin5+8FIo5Kn9y4MG0aCj2CrI3Mf
B6dv83JIfhsTDHJ0xnFsfv+k2vla1X17pR/2DSdNO2hY6bjUnaH0lw4bXto0
GOnikt9R+iuHDV9tXrqrhw0LwUfwEMwB85yZvszB5PQNs03OOI0bnoFP3P8Z
+T3GT37DSmel7lbV15ajhoseDU6DYZ6u/A/BA9qCI+CKa4cN57yj0qzKDhv+
eTdMVfJ3Bw03wUyeadgH1ocPTk0bF2VMU9LunFX3W8OGeeCmKRnndjWurw0b
Xtq55J1GDf/ATbDSFZ7hvmGn2ev3DqOGvWaxhlW+8ahh0d/V9Sf7hqNOLt1J
lfar389U+mPf8I8xXZd3EW66LmPdY9SwFMx007Dhpzlyb8rCOT8bNBwG9+wT
bDPXoOGfW1LmfdXP7cOGwWAQWApGgaPgE7jKHMEjcIm21L250nNV99m+YbA1
q+2P2usGDU/dmnHMU9fvHjYcdWCw03zp47tdwxbzsi+GDdvAU3ATXPJi6f8R
TDXe+2EB4/pe6sM13894/tk3rDO/da/6uX/YMNKhJR8yahjptWAk2OgHw4aT
Fhw0vAafwT3z1/UfDRvueqPk/+sb5oSbYKaHuqnYaIyV5A93U3GSa0dW+Z9U
O4PhVMzk2udKf8So4SVzel/uB26CZR7tWh/uFf55MfdvTv5jLNYHa3y1MXnU
cBQMBT/9pmvYCYaCpY7oG0ZazJpVZfcfNRxrrL/LnBrrU13DaLtUOysOGlaB
a57KmM+uel+o9LFKx1R7i9a15arcpMo/4m/eTcV52l1En3VtRtiu0kppc5+S
P17yn90bzqHSyvV7mUHDI3DPqVV3ydKvU7o908+fSv/hkteLPPOw8Uxwyl/6
huPnqbR06TdK++8cNt4IBjjNupo2n618mUpbWEPqfk7Ne3dhpWVLv9Wg9QMX
fMjc4A0qbVC6z1eZ/XM/y1X+rmHjcPbvG6eyeqW1Bg3XTHBuw8blwAKfGjQc
AQP9zbxV2qV0K1f/h2c8h2b86hxd+qNG7W/9Z/tqxvabQXuHbqgyJ9T1A0p+
teQ16/qc8Lc1Z9DwAoxyZOl2GrQ9ffmS9821M6ru6aM29r+X/ti8vytW/u5K
/2ftqWsrlPzp0s8+bNyJvXTvQdvzYZRvVJmP17UjSnd82ld3MbZg/Z6t0qrV
z8yenZI/P2xjfqPKrKTfyKuWfNqgcSMrKzdo+/ihyeGPwwdtP4cPTkufyv+r
5DMrHV2/b69+z4c5Sl698rMq/1+VWaPkCwdtz72+ypyS+3rPsPEoO1nbYOCM
aQ5GwqDtqyekHpxxTsZmns+qezqz0tyjNnb79j5VZsMqc2f2o3MGbb+1Tz8A
e9e1S7VX8gWwSMnvHTb+wz55ccZsv79y0HDH5K5do7N/rlVlvpR2317tXJ42
L6n8/Mqnq3RZ7hfXcQ4+p9JGGSss8FnvLGxe5W6o32tXPtew1f1v5atkDt83
bFyIfXKLUdvTvmgvKP31Jb+z0volz11pppKvydjwKufBQaNWT9/m40RrIftl
0MqvV+VvyX3+qvTzDFubX48eF/HO0l+Xcd44aHsp3LBR6e7P78dhy8pnrbRx
6X8Q+f3DxpfYG2cdNo4TFr6gxnN+pUmV7q269/SNK7s5bc5Z6YGS/zRoNvVv
6/q83g3v37BxJxNcQ/7Wfm82bO+nuo8PGpfw9SpzR+l/PGg2/q0Zm2uTsidf
bn0o/W8H7fdtJf/Q3FfavOQPDJt836Dt87DIpqX7VX5/cNjatq/+PGshrHDv
sI3jA5XuSXncxZYlz1/p/SVfVGO40BpYaavS/S3ry9bWttS9BB6sdDAOKePE
e7wCA1S+QKUtMlf6vrPkRwet/QWGraz96+lB259hiG1K/2p+b1vygsPWjnHY
k3EX23s3B+037t8+8Z7S7+DdrLRI/X4wY16o0utVZqFhk3+c8eM6Fh623L7K
/scDsOP/XeVfGbR2Hs54cBeX1xguw2dVurTSFFxDpR29p8O2n/7MGln54pWW
r2v/Ze9U+nnGjNMwX8r+oPraJM+A9+fDVe7twzaOb1Z++6A9V/ZV/MEcXbvX
pXK/8qUj24fJ00WvnH1z/BtvcGTf+sB5TEqb06tbuqWylx3dN37E/vrLYfPp
2Msnl+7RYePxFh+2/ZoP6LFh28+XN66++VzUNR/m5Vddq68/fR3fNw5E/WlH
zZdj3zwrnIAxLNc3f40ynxg1rIAb+dWw+ZVgkceHzbcEJ9jvcSY4CQlvwi+z
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
P/3y9fo+pzMFzrZ+OmV8J02ZeVP2gMh86+Q/Z684MOX5mA+LzFdBbz/hg9Ym
ne+Sir3Dn/P5wu4LRO/bYdbqoyLD26/lGr1vsh2SuvCyuvC/v4H59Xdg12hf
Pes5HCw2zTfN3OOi2VOctTBe/hTYevwtNfKbmY/PZk7ck/Ji9szfYZGV+Vza
dJ7DuQ5Ym31Bb15heZieP8W1o3Jf7o+Mk5cfHZn/RXn4n03sPWIvPxJMb2/C
EcF+7CwcOx8LjOo7afYhe5DvuflWKj+LmIHjMg90x0WPh1QXh8Nfoy1cPUyL
O7UXfD76V9OX39b2mSPT75c6y2Z/OSl1b4+dwEZgH5Dt83Cy9tXDp+JVL8s6
gevESfJl47v/lvb9Xi775mmpe0DqvBYsra71ZoXMg/0b78RvZI/w2xz5bpz+
TxlN5XJPTV8woPLwnvys1J0nsuv8LF/IPNsj4GBr/kaRrZl8Xpdlnq2T1t8t
cv2c0dT9gqweToZfylqqHPmcPCcX55k5N+0oI/bGNx1my7vpXfVsWkPor8ia
eUF03lO4cN48wxfmPb0wdedNexekTc+JbwGyPdnIF+e9Gz9D9K67R2eTxZ9M
ybvgvSE7+yy/NPojIrvuPfY+j+/vkrSvvcszb563q/J8T45en/7mfAD2FNeu
zDOMk7wyz/CVqUu+OuXJ8qvzDP8/l0vdzQ==
            "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
dm6Bs/BPlNipMnSvtn7wWI+DQ6JFx3YaE7/ap3V9oiPhMbsg1y+3KOzNb9F/
nyuAfNpinyziSSbRduGnibe4yqxSde9rwRrnhV5mphUQvi0cnRzEgefaJK6e
fyvE2/IT2vZWYcrS9LWKoxy0fihtffqShm9d6eFaXzL/7NikBXsotJkoJUVQ
FB78fmhTZkbj6V8LjyvEd2rS6DiPU234a/cp+J1bDc61mG+9GcmF/PntByrL
2hH9qSvd6FE9SmZFVj0N6oWNyu9dtvLteNZ5aWnu3jrceBTYoDytF3M3Ba46
PKsNjtHmOia7P+NXhGczw5FwXY9Z16k7rbAzLWErO1dBnbtg/v6/HNAifT8F
QQekX/Q+Mr7XiGMHCu0G9vHgk3pcsvcE2ZspG707SG6KPf/C1OilwCp963OP
7KVcxCnxXHniQcmMWUcGSS8fK3p9pqwBt5dSBkFH3iBEe6ex+EAP5qvnDY4s
bYbn4tI1sSuKsc/0VMw6WzaSM9OuLGe0wmXOnC/Pnasx9PvHglXLufjU2TrD
kPy+czrrLQ3W9aIueHTDnCUiyDWN7fOyaIXgnLdk2a1KmMSMf3S6ngPdzaMx
UfMoHFmlU1YwgUa4oJ5xU5LwSKP+r1mXaFQ9yGL8IPlH289wVzpNfMEtUHl1
uQhZ30dWp3MJ9xxzmfCjWYgyHTOnhq2kh9KPqnUdJfs+vaJLypvC70JGaZhi
H5rtwum2MTIHKdOut30QQs7e0ElrqBH+27I372hJQ8Fq87H4YiYsYoSh8y42
4e58c4ktzlmYkJk3LUOVBcuErobr0wl3hmy9rGBD9vSMdEDEEwrMoj/njb6I
8FQsScdJRGNanbpJXLUQXjEPGZQaAyn76xoUJ+Xj6tGRhvwwFibLr0LuUx4U
NkW0JrcJsNVjp7ke8boQzqS45gwBNmoe1FS5Q+Go++kNT0jP82QlTT+Qfb9S
ZcRcRPb9gYE+/zHZ94l/1/1aMacZOf4vNO0Gi5B3Y9faKVsI59/bq2SlJYIN
d0OFbDLh91/vbGVVSQ5M71eR82UgsmXMuqarAG6fY/ec7mJB/DXvds+DFiS1
VPaXSZSj1SDsyhtrDuo06qxX89i4/6ia9d8X4m9HLztcWiBCwETb8dtSRJCc
wZI/3k0je6TjzKceIZlbj6fL3jbjzDGO5R1hCX727ed/IzzsbdnXNyu9DXMl
d3FXe9Ti7NwHziN1XHiVs3ZN0+6FwaVdCSnXeFgY9OPDS9JnnSHb1kqTXtpx
9prvA8LnhnfpE+7dpKdC3BafqRFBOXDAo4JHcu6k3+vFTcSXf8nr8CgaVnJl
E0A4OHxrQGj8GuKFDPM8u1lNMHGrd+Hx0qFe+Slg1RcmXGnTG7zkJsTcnL5Z
Yiwbt5o2f5bYwkJa627RtKd8JActrV2wmMJJtstrhqaIeFnUqVhLMn9Xl06d
T+bqfV8DQ+w64as7nB0pviLUddb2LCf+LXVwtqT+dyFkNl5d7KYngjn3mcZs
0sszR3e8GJpFwVC0eef4FxRmNZ7YFLyERu7J0Xlinync6Qu60mnBR23ivZUm
fULQgT1VKhBBf/G4rz+WCDGuJv6yN+Hmt1b3Y9+eJzl9zyC5qY307Modq1Y/
onHKrMio6D8Kf2+YXjLjcnFun+naT/I8FBlVys369/pdiY2urRvbcWPpuo2W
H+tQJFG80HIVyZ8TTSt9ic8+mhcof5H4rAr7TmwF6Xuutdt96haNqEzFIN5l
GlkWlofdnElueOYqP1zWiQosfGsxmexHtaY+N5CH0K/a4+6cZMCieIB3278A
B2Trs5ZVs+BfsfrkvIpmZPvFPDPcXIpixk4ZTiEb1y7plk48JsJecb+EF6U0
2udeSJYVo9C8tjL+OZvG9+91Blcf07hxfVfpAWMKb9iLP237w8CX9fjp5lOE
+huHZV8uZ2PmlR+TAq6R8zlx4/HlzzTY5no3/H4KYXkksCB5oQivbuUf9k3+
9/+8zHFn5lJwyZBI+/GkFbfk5rxXj6yCPNO0dpM0F0GB89adnd4O2+yS6Jf7
63BSNXRdN8lhndkrGvaQ3Kk8v3F7GuGugdwpUz8R7nIr7b6Z+rUDu6898iwK
b4S0/YHtjx140L4hZLUdZCBJIcGDebAAekdM5o8Us5DwOMPHaZIIzhEqnOOk
h6rX2lSO06WQylmiJCHbiKKcOJmiR8k4vPDZMVqdCaqhLl9xhIUrIev71zmy
EM6dc3ma2r/XpQUr75vSgc8zbY/1yTVgVXFZj0FRL5RNCyfozeAg7aLpn+ta
pA9e8GuukbltcBocZu3thVrlG4O8Wh5aX+5zLV8hgo7XkPWsCzy0fdz1cOlD
AdYejr1oYCiCi21q49gxCusz+g+sIX1h7tWa8pf0hW4fe9TvAxt96v5iy++y
sTe7NslCQ4TjEg8Mfcg83N0iiNQl86B2y+FVK5mHrZcN5h6r4GHznjUBL1SE
CJC2vjifeIiVok61U7sQv/rqTRJJf34LTqhjapL+LE09Gq3JxuA41wmf41lQ
+fBir4K6CNEf544d6u/CS06VrvaMFnAnpm4VlPMxsaG3uDachx/vS/berxGg
fINp50SSn1LKU3505pLHk7SO1GJRWLnEQRRP+OJ6d0WQzA8W5n6TtCjex0J/
e0TvsKoI6oVG3ybGdGFf1LzT5/2bETiy3t0liI+eSae3cEwYqIs7Nse/PR+h
kW9m1SWx8G1lnu4h0o+V8XRck9MbfF2gXzzS34PHl+dE2lU0ouwYx+Lex1T0
LN75a1McEx7B7QvTbZqgITszv/1qJrxORhiulWJhZQt9xUK/Cc0KzxQ3J2SA
5zX5V9sgEzOOZ2yLUGPD9GOrqkYMCzcOepkOknO3yjq/Rv1oD4Tymc905Trh
6HhFOpn0S0vL9DwLYw5cm6a9DzzOQZ7T9fSzJPdPWn2ds/EMDzk7h1RWBQiQ
tnf7o6nkfGdbxVZIZ4pwbIO0yase0psaHtOLu4TQY/kxay6L0OQaldpbRbix
IXZ27LAQU+pvH9SKEUHLerRnL/Haw4tmiQv4Qnh8nP6G+aQJPt+dI9qPZOPV
6LZLd9aw8Cd9ZILxgibkrDgX92pFBnzTzBZ19TLh86szrO0r+XujOec+f8yF
4lepofUXWCi5m/N4e3ETzDS0jitdy4GNuaHwxy4Wnn+1+zpHpxXXzVnqadMr
4fww+NKvTA7OHrQzmHWzFwXKI8WLFfhIfHDvVclKETybdkvp7GTj7mJ4HBxg
4eaK3TtmEq9bxihPU/TgQ9Lm+3hNwv0hexfYWq4WoX1JdGfbTgFC5yz/eobw
7uOVgi2tDBr5PeLT6/l8OC645J27kUKklkZ9lYQI9EWVs5VNJCcPdZ7nC2is
yjqxwqZeiGSxFAnbBBE277ukVtBBo89jl/EejhCZ22uvtad3wq45KK/wWxOC
1kut2CDi4U3vfYulya3gD47fIuJW4UHbePYyZS5uLF/Ufl9JiO7wn5EpCRSo
SztjdbxooId0egwfhe/fxH4kfdTD0SxVIHv9zT1H4UehEKydGu5+bAqK09Oo
xmXEe0Nuju87K0RlZNw1nXLCwQmDX0NsaYwm03/7eSJkb/PfadFPY+HN2x35
5UIsyNgcfLVShKu3stUu9dLYvrTIZ4AhRNqT7ebHzvcgc+Mx327DToTT08YG
yJx0jXz85WPbAav2mvwjgQ3QvClZ2/etF/G+ecE/U5mQXWZkv2lrD76M2Abs
fkEjWSv2Ce0uwHmV+5cuXqDgvJKv/o7kvVHirUt3iQestUldID+Dhv7qqvon
/cRbZW/s1PFtxJWsv++PNn7A/Ktrxl5fYMLIYWl/ObMR+1P6Av3s07A+/ONv
t3QmzuzXyXoe0wipbe79xx9/REhMyP7E20x8nlLxUVWuCXNHty6siUlHUdXn
9ZKtTDhmX0oeqGMhMvaX8QI1FrRrp+xTJzmw+c3GX9+kv+Ac/+FY7p9WbLOZ
OfI5UIDogzfMZ3eSPtF65WFMU3gu3mA/h+TVnwXFtwZIrnS2UwG99jRUE896
TieekRy76/1X0pt5il39fNKbJQftb7uS3tyy8lvjOAfi4f4W7LDTpO9U+u1t
PSiw1e5f43qJcG7S5awNpL9kAs+uqf3XXzn79+wraoQDEtUHfFJh2HD+gv0z
Jk7vrWElbmpCq2fNgXnzM6FdZbBXboyJ+QEinYvCRqTM6ZvY/SQNS07qKAbm
MvFGpvWgV0ATSPtH9wxloflE9S/JJSzs9v7TevNoE/ICD3m8G5eFX4bpeecV
WFgffy394UQuvM8W7A59y0WrlswmGV0RBm7/Ydr3M7H4uEJC44cefPh+/+RZ
4u37Xk2nGpV48MPIy+1jfFhtnqqiRPZrqd0fN3FNPuKrnExc3guhGOPaDxOy
jxnRpXmFInTMCb8bSHo+4o+hV2ebEOvFrfUT7ogwJMEt9KuncU26r0VxUIgM
1nZv+UQRjAJKR/6S/WIKlT+Lk/0aVzbjSDPhf4k9TWI04f8P4leV3xH+D/pw
USUomnBT7v5pjS2kZ8dP93gqEOLDMqklah1NWCvmmpGgkYsLZpVIcWbh+ibN
NQN9rdB8WsLTLqjGNIfrelamXJSKVSyVlhHgQkzoPM/tFA5f2RYh/oNGwtEL
b/3X85DpdSvw6wYBIl9V7pZbQzzE3iRoeZMAO/c2lawNpeCxX8bXjnCo3tj1
tkXnBXj1fG1Gz3mK8EqRUV0ZjWe5BoZdrSJ43Tdbbkq4NTW1ZOL1WiGsumpz
Ij6IwL/4OKWFcLV0h0H9MsLVDkOLrqqfI9z99X1QUjkNtUurRob/CMFjjKu5
LSfCzYbHAReJJ9ydoPcd2hRWr1bd6uIjRPWiLz8Sa8heyfO9mq0IB53Vl+Uu
FOCO0p3K2fso5BXea1MkeXalzkGlcybJkZ1R5ox//+d56Cd1fhINP5V5De9I
zmlZCvqL+RRGTkodKdchPiKnk1/4kJyLcK4l+9/76F1mnwoWCfFwtcSftZYi
qO2dlmefQyNJNere9SkUpI88V821I/nzc49RQAGN1kf3XHlSFMzNeT4H+TTG
6L+J0yLIHj2edMJkLeGrt3RK7SEOlke//c8wlgPLE1saTAnPnWbobasuZeIV
VfX38/EeSH66rR2eSfaqboneuYdC8F+e4SU1UShydcwo3Uhy7oKrdqPYv88v
O7HTj3ih75X0yhnPKWgd12rfXUf4/cyM/HfGNAJiLE+lZFDQdlzgE/aeXOe7
X+4uItf/+uIBhZlMIVLum50+ekmEBz7bWs6QfhRreaaxcUSIt5xybDwrwsIC
rwJZci6qZYq7av8KsfSWBbv1hgjTC4fHQv+972ziSdVJP4QY8no95+RiwjW7
vSco/3se3LWuyFqFwv2eybur7rHBy1VeF2LNhguzyfPsfBHqDcuqXjf3YPk5
r5AJoV3wtg7OdCN9FZFkYj9xKQPshP0FK0/lo8tzs0zCMxb4nqkfX38SgZd0
SHo52QvKNqz/dYsQu9/80r8QIULLuY9/KpqJL/wcDp1ACdH86FAjI0SEj5KG
/4Gc4xTOmc+niX9k8yr03HXbsd9I3XKRfx3yI9rqL8zvxZWR2ay+dwxM9vXs
2n+xEO43J7qtH2WhNcVOOFhKel9/3AbH4Bw05r1Xq9vNgvM2Qe+7uww4XN1f
W/W7AO+Wc8dfZbMQUNl2c8UpESoHxXMmkn1IaGjetXQcBdHW/u0JUiLcPrXr
TPNLwhubYzifCCcHuivqBC6joJP9dGGOFA0fuQOujDEKjvPiAtdupiFvnR2Z
cITG8BT54NEbFLqlN8+uu9cL8aQZ64PV+TBZtuLVAOEEaa5Mi4qEABXaNbMW
W1NImlgdNXeYxlddOVemNgP6y198dN6cj/BCm+rJ0Sw48vtvl2g1w6/PZYmC
UjHScsWkrmxjI3/GVo15QSJwlq81nNBIY3LY0gOK/UIsvLvGdZOpCNpJ8yLT
yVxu3q5MT5OnMOGDSmPQNhEYP2/cqMv997l5cVVBMhQ+efC9zDqJVzJ+c6XC
aGyYtLUnfh3xvNIcl5JlHKS+X10qtZuDv6pJZ3UJ11lHUu0NgUz8Z3ZKdvWk
Hmi4sPV3nKIxi3FjiBvRCfdz8S6aJU0o+RruHdXGQ4rS0adNFm1IOCRRt3hC
DaLHVT1+6MfFlPzXt6XjGVjZdXbwkH0hVmQN5x//ycIuH1+L6r5mzBU4d6+o
KsUkzfQL+zvZuODe/VKDcM7F4tPx70gODwz/2Hf2Xw5v8dOWcCHzPDSUb0Xm
P54rtu8Smf+A+h5pJ2cRvHUdUpRI39NxAVkVxO/yuf7urR4iXDk7oAOyRyaa
h/X8yB7VuzxKUCace+WtYUbcG3KerfEvNs2jcO+mWOO5A2wU+NZJcsazEVZ3
ffsuwnW71BaN/nzeg1PhVeM39HTCSvrGsWrCd3Hv+8V/aTCgmal9zFgzH43P
W+XCnxD/Grn16dW5Jqyr3j9dfVMW2Jt+znigwoLiy/h18pMYMNiUfX7RyTzc
/4w3ybdYyDycMmulP9m/FeEb7Oto7NdMqH8xJMTtLU/UJFRaUPQwrfnCsU9w
sDhdpjHKxg4rNzfBqjY0WCWt+J72GcFnD01YcpGL9ifbFCyfM+ByOCR/wKwQ
5XnKCm8GWXAo7XMajWciJFPqkOuaHlRXrv3P+wGNtgCvZfPEmXAtd5umubwb
mgt+z3GIpyC1aNgwQb4PRvc3PAn4S+OvzNXRiFQhyrfmrru/mQnuj7B+ZbUv
MEp6djFQmsbES3WBYUcY0BHjLWs9X4DGzWXSE8oJb/t/lgyTaYSdrF5QSUgy
ptkOyz4lvjm0+YS3PfEan0opj3fEa3YZr2f9Il6TdCacGbWBhY5G/33yxkzc
+bspmD9bhNjed6BCRTBeFVESQXJDarez7wDJ/9Ucxb0/lPtw+EnhithxIqTl
dxZWpAgxRh2T2pDcgrpTaSo/T5bDtKLT3saJ5HvUitnfskVINIidG8OkMXiv
PdON8Nbl7XHmPgb/nsdOmvfoNxe6jqdH5y/+977ZbQVUfDeMEx0GimxbkZBm
YmhtIcCxg/+N+8Vpw0k4/22fXIc3WicW6A9wSR7OkXo2vhvzhwOzFixvQXL8
PWMpBh+/S671dk7uQmjageDGmwwwd7xQ3bqQj3V+Z01LZSn4OBww+TxKYbBn
jV/XVBo9Kgm7ZsT3IM9/668b3zsxOHbe/DDpWcOyVpvjE2jMsTU9mk76JfLN
bN/6ZxS6Xj3cXkz2giV5Qfse2YtJHEcdDbIX8+VfrjD+S7hzrsR4+hgLZ8Ye
p2iTub8tmir74hnhcMXSq23Es/zbUigT4lmhOxoeDTq14uXw0JB5TyU+OKau
387mwO/OnSOjf0WoabsdPfKTxvqQo32n8oQQjMm4ujBFCGwxNlHrI/lvPjMk
vkqIhIp95TuKRFhit4CfT7hLJV5/6RPCXeadL3M/bO8Fn5V4drSAh+kr/Fof
rCA8k5Hvlz8owHHpN20no4lHrErJfh1IY0a7qrGHG+nNkHEPZVRp8Bfv1Otg
Uqh+VMph13DgFNaT4LmTi7FDq44V6ojg33q27oVEN2rep0mqrmmBXEj2l7YW
PjRCd8kmkOv6wNn/xOcdNLp+R5jaRFI4K5+8NP46HxceFuvunk9hgc/ATTGS
22YVo8FPKAHk/W8NSJPv87VYMOvf83vzHxRSuvspTNUffDKoSMOOlnDJJZze
Xrb8y1VHHh7flXbbTPyjaOa2tkrCaTG7tQVnngsgt3rB2Rc+FLYqHO9+QXrY
9POWPcfuN+Ny+X5Pz2slGMkO7dr+mI291hy7oSgO2iMCy9rFufB46171QlsE
t7bhpQuz+bhIVwf76FOQ6PQ9vW6WCHFxyaFBYULkvTyu4sig0MTmbmowpZEz
4GUc4NaC4cuSQ5sjy5C1XBf7DDnY+8LzZ6taLy6blty66sqDeUVL1oXlIuww
41rPbhQgrtr+ZXcIhYTo4mgG4cmrrQa/9x2koPz091ExZZKr2kHm2yjytWhS
vdLPRph6vq5OH0zD1nURWWc+MaEhJb9nwuMmnLe5+aXDLhs8xWLLtatZkDqR
Ks8wY2Cc7sU/PVIFaKjyL3FKYeFXp51nPZl7MwnTe76WNJSP2ieWxlJYf0w8
qoF4/d+NpkoZBhkIlWjeasZjYscnY4Os/iZUMja+4WXlIklxQn0P8frj5l1+
fz8z4Or2TqO3uxA66+9NPDyNjZg5rqlYwkO3UIy7e74AMyff+f6Y+IJWV4ip
4IoAJw5UNldepEBQu4f77/N3qcwFPy43I244ochxdQmGUor0hwLYCBluHrIi
ObY2vci2PDgZXro3U06SHHsXJxE9YNYMmbCMqdd8inHi3S0DJ2c25in3Pmk2
ILlXWukdWPAeammJZuLrmLju7H/AMq4RNjknp1QXfMSn7swlcfeYGLfJaHLo
rCYU6E794iNIx7d1s1Yf/MJElPElq5K4L3g7Ofm405R2HPneqj7hjwAvNduC
fUhfWNt4FXuQvsh0HzLwJn3R4OgU6L6hDTklEruVez+jL2F188drXByxHOef
9LAd21Y5zpqJehwXe9rufLoXzRvdvtgu7ESYaoXbmt+N0G04vNLZn4eWs+7W
RjVt8DEwwevyWsQ6vBtvxOQialvgExffLsSdoXUu2zXDs0pgKnOVjwbzyIAk
feLxFQNP5VMpHFPscTd0oWEj9PlvKvGBzSqh1bQRDfNu2x0ZmRS+frEfvkPm
bJIgLOK4No2GsE+SXxspqMgaLnWV70HZHupFsqAdq9Rn3ny1S4hEbTmrlWEi
TLKS7rZnEP4pmHqCooVgjRsvu6xLhN+XEJNK0xCdHs4M+izEWnF754KXhAey
LQpXt9OwSHOXONorhM1P5SsWhBOUv/Ren0o4YfTGhOwmwgm9hz5usRGQ67nk
Vk1hP43AkJ53auVCKH80ddXJE2E44NnIfhYZkvbg8e4dpC9c2LW+90TwjZop
qdFAfOKy6pr1A0I8fxxeoXCzDXu2x+cVfq7BPOuMrJvEa5PHPn8d+8GGZryL
S+QvNuJiP7kzFoiwvmxB993FfJxgV8YH5ApxoCOp9yTx1j09aYk8PSFO/vio
pvmBwsUq5qw6V5I3M7sWdeqwcHFqy0kLBTJ/u3cp2pF+TCtaaVKY141pSoxz
o5dbcVFvV/zQHgEyDE2o3nAK11Iky5cvomHbs6jVv57CmYJ5sttkyePvTdM9
/IrGitRx3Pc6FOadW3tgiQcXvmGMW1cP92LMU8IpagnJcZXfEer2AtzM2H6v
8xTxve+vTI2JN6fFL8Im0l9z3yitfkH2eJ6ryYiCHI0fQxHB4me+4M2MUxEZ
iW34eugiW40hQEGu2MvExR3Y5rdR4tCmBswMlP+7prUXm6sqVmfpNUMpwPCg
sX4x/gxsnFJmy8b1MdUTZltE+G9BlIpjNvHTRLnBpqkUnl3TFR9tF2HkdfqK
YeKzgRv9Ou/VCCGBV8V3nougObZVWauNxsm6XQnNPMLJEis6jxwiPaOz68Jp
sucdf4b3SEqQvOzzHdMeJo/fUC0mW8OHbgdDy8lABN2NV62C7IWgLKOGDxaR
ubyTF7HPnsYt9WnL1fIoVMy8GxBpQHxb501ORwHh7faiha9MmKh1f/rp5Z9u
WOtavXn2m8Ki9emSD3d2wUXarPvmhGaUrhGvS93Lxw9O8YJPI83wWXQRbd9K
key1Q7eMw8YUo4fgcUkeT3O0jfpKPH3ho8fxFULovZ+Qp5olgtWeyr4JhFuS
jl6+Z9YlRGG1soQ2yYGepzbBe0kO5Gvzy1+THOhgN/u3F7KQWq5t2DuRhatW
sVsq5ooQ8v72l9CfX6B5eRD8J+3Ijqw2q10lhHeVzF3/vT1AvcKgPacDYm78
/b+zhGhMl3XrlOuE2J70784Njcg0qBHvdeeBaxn/pvoTGy1Kq9/pJLJR3Jax
KEdDhCiHu/tXjuOj/YOy5Ds3IeFWyw2HjYm3ezxboC0vhG9JoC/3NfHJ1I9K
j7xpfCis3bPmDxM3Zu/o1a3swYbIZQ+8J4rwTdQse+NkNyxlWJNMhC2Q9Fn5
9ZyqAPvNTsi3Ec6bfe3UtLUvSI9u3HZ+kx4F3dbFlTkbuHifvd7ecGovxvXp
2/zz3qBGH4+NBgKE6/NUeKTHykI8JePIHquvsUo0I/t64tKNZMshCgdzTns9
UyE+bTm4WUzxC5wzV91KkW/DuR3H7M3CBPhQbhEl/q0dGYJHsvPZ9VjuPKKX
+q4XJ9yi2HNVm2E7HG81YbgIVJrFf0fN2Ri+t68no6AXrJ0/zQ+c5+OBcXjR
LH0R7LSXT7RfLUTrf3ZLXpCcVEz8z9TjLI2VSpGcmucUwpVkL3ovIV//+pal
/JnCwIWsyTcNRVjTPKfqYhoN4UGHQhdFCgtDL0/Wl2IiYUhJwmZdN+6JTjvM
fkf4JVNO9aBUF5qVpG4VejNwvOzgz7YFfOSYR3//wWqGql7bJdnnpbhas+b4
5CY2Ar+8u/1lchMyT72RMvFJB/PAHE9pBhM1wbFyTXlNuDFQfKXzYA6GnhwW
q93BwiPbXPFp5H7rDFoC+LUFODp7vHV0O+l30xXZU/yacXyH/F2vfSW4n1z0
bvIDNlb06bjojfJQ/qX77NozQuyP2NlkQebBiY6vPddCOGfPuf/WHuJibXKY
zRDht8l9stl3J7Pgof+ieZTVg6fq6vufEc45OFe487+XHBhKHdkeJseFmVzK
qRrCRZq/y6SmmPEwrS++LGyLANvblDkahLv2/igx/RUvwOrfzQ2aNymEasX7
bnhH44DKHz1XPza4Mh6u2uvZ8NtyrMRkvginnGSuvGnpQVFxunJgWBdk1eU0
2ScoFAS4hb8V9GLKzPEi3VQ+Brcc/CxN8qH8k6/T+RWE654tHoqxJ/n8SmHl
fg4NOZ7iFcd1HJyz1dHzO8MB5+yGvOvEo0ULHZZWfWBC7e2un9fMe9D99Mml
LTE0vLvGHVmGRnQUzdJKHXqPU/eX+C3dyITRwupf+scb8fTQbuOfSh/wrXxw
SoYjE5cneIfT87gY1/I37Ho7F7vbHzYl6hI/DQqvjHrfC3vV8B9K+/gwGDZ+
UrSK8PDl05tk4noRpiv74vpmPmIPNiheI7fHSc0PmTCfj9rz2l2RSSRH/hof
X0J6x+TQH0UFZT7unV96WSZCiIgL66L6yHnF5npVRuwSwOzA5mFxcl06r/ln
TCE9PGl0cYXLAAeVktmDYwFc2H0lhLVIhNBymcd53r1w2N/9LViGj/ryUseX
hKvjY+nsR67kesqdO9H4nYeAuM7SHeT20LSamXcHeXhQe+F6LsldxbYZ96eT
xxXkXk74yuIhQ/mz3euNQqw73XI+w0iExY+crOR0BGj1tXl4bR/J2b0LK4L4
NGbmPxratLwJnWP33x4IzMDnE8Kaif1MaCl86jjp0oTvp4TcOyZZ8Iyylf04
m4VWjcoyMzMOHNbPjRh15yD8WbpaLDmvFa/2qSUOCxD/VOZ5VgzhmcLDU+7f
IXx6p1rXJJOHiTHbxRPFhLDLXaNeulaElUfGT00J5KB7PKbZ0Rz4eC0sMSfz
+T8KHd27
       "]], {{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAIkVePKzZ479I3A9ChMfqv6o23cEK
XOW/ZJmEu2Rt3L/w0lTRe5bkv/KPPTamc+O/cBGU47vLv78AayDYV5Lmv8hg
CDHquM+/sMPuX6M+uL+aymEIyqzmv7DoSTY19bW/qOQEvAV27794w6BDQPzX
v9iQBNMYeOW/1LCNGkhS0b8w/J9lxsrsv+yI4sI44da/AHrPCZKGmb+QVR8c
ICDov6xjicn0Mt+/Zk30py7u7L+A5hQMLU+rvzJCjRKBbOK/8J49JjIwtr/w
U5nil8jRvwBncQo4wXS/sOGSxuU72L9c+nF4zIXnvyj/f0uaRsq/Vlpa/IQJ
7L8ABL3DAgeUvyCe6diMYN6/vCXGHgYA479UwsKN6E/ov4xPu3Nq4tu/wBO9
LqIJ4b/8tX2jLKTWvxSAkUJXXem/egJHUJNm5r/n17WZ
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAmII1uEfT6D8YD7nRetfpP2AkikrO
Yt4/QGa9XUDv0T9wtdCMOdezP6CzW1VHRdw/aCFKEj/K7T9KsuU0UH7mP6z9
z1WTvec/8G3S+8+/uj8MSD0+LjjjP3o08oweIeE/TO1nYL/b1D8ez8fZcwLq
P7BDzg2t0Ms/LvCAx0N25T8KYcL7FwnvP6RM0CmfO+c/oMDb4s1/3z8o5dUp
DlLDP7imUFYSPdo/uFmd1NDY2j/UR9tRyaTUPzi7JyTi/8M/Oj5/Db2c6z9A
+Lmrp3XRP8R3mMsIjeE/mNpyeWmV5z8cL5DXPrXZP3TrIdU0++I/wE91yZIO
lD+QYx73FMjPP1LEvZPUVe4/mDcBev6U5D8mAIFBqNjrP76JJZva/ew/ZAyo
S/hL6D+opwfHXjHdP97e8T8lye0/wOY2F2d62z/1Dqhs
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.945109, 0.593901, 0.], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAe4dPXy208T/hMst2l2f2PwuNbqDr
KPo/0n3ez92H9D+iVvq9a872P74hMWE+G/s/JEMttdTN8z9qWzT7a575P8Ka
riUdQPM/7PTeP0CK+T/VGOL6g4PzPyAgX+9gc/U/kmMbNBII+z9PUmclTqDz
P9EdDGawVfQ/694aIEE49D9I7I3d9rX/P4oc26Bitv8/ZwJWLjMe/j+fc9B2
Vp36P/diq5Ubf/E/VYB0ZcWL9j93nmOC9UP7PzeP8pJ6FPw/1I/K6S/S/z+I
MQWdzWfyP8JI/r+0YvM/APtc9ffr9j80d4mBwzT0P1DRTlhDJP4/FuuGXvRD
+j/hSGbbUgj1P0a03rimbv0/K4nkji7T+D8e9B9ODWn/P69VWqLY2fI/16XJ
VVOu/D+b3XZQyAP4PxN+qt+GPf0/x1io2aKb9T871KtD
          "]]}, {}}}, {}, {}, {{}, {}}}, 
     GraphicsComplexBox[CompressedData["
1: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
pdaznEi5EeDuw/w/vFz3aA==
      "], {{{}, {}, 
        TagBox[
         TooltipBox[{
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           LineBox[CompressedData["
1:eJwl1FV4EAQUBeAlbHQ3SHejdChdAo4GqRGCsdEgXVJKd0gKSqO0hNIdkoJK
d4d0/vt4+M99Oa/nZoqMjogKDAgIiCNibhDBhBBKLGITRnhMj7jEIz4JSEgi
EpOEpCQjOSlISSpSk4a0pCM9GfiAjGQiM1nISjayk4Oc5CI3echLPvJTgIIU
ojBF+JCPKEoxilOCkpSiNGUoSzk+5hPKU4GKVKIyVahKNapTg5p8Si1qU4fP
iKAu9ahPAxrSiMY0oSmf04zmtKAlrYikNW1oSzu+oD0d+JKv+JpviCKajnSi
M13oSje604OefEsvetOHvvSjPwMYyCAGM4TvGMowhjOCkXzPD4xiNGMYyzjG
M4GJTGIyU5jKNKYzg5n8yCxmM4e5zGM+P7GAhfzMLyxiMUtYyjKWs4KV/Mpv
rGI1a1jLOtazgd/ZyCY2s4U/+JOtbGM7O9jJLnazh73sYz8HOMghDnOEvzjK
MY5zgpOc4m9Oc4Z/+Jf/OMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7zgIc8
4n8e84SnPOM5L3jJK17zhrfEjD+QIIIJIZRYxCaM8MD3f+Id+EqBgQ==
            "]], 
           LineBox[CompressedData["
1:eJwl0VV4FgQAheF/o2ODjYZtMLpDwgBEJKS7u0NKQUpAQEBCAenu7u7uRlK6
EWlJQUHx9eHi/e7O1Ylu1qlax6BAIJBKEpCQEEJJRGLCCCcJSUlGclKQMuj9
NjVpiCCSKNKSjmjSk4GMZCIzWchKNrKTg5zkIjd5yEs+PiA/BShIIT7kIz7m
EwpThKJ8SjE+ozifU4KSlKI0X1CGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rU
oz4NaEgjGtOEpjSjOS1oSSta04a2fEk72tOB/0/pxFd8TWe68A1d6UZ3etCT
b+lFb/rwHX3pR3++ZwADGcQPDGYIQxnGj/zEcEYwkp8ZxWjGMJZxjGcCE5nE
ZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRm
trCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc5xdOcJJTnOYMZ/mVc5znAhe5
xGWucJVrXOcGN7nFbX7jDr9zl3vc5wEPecRj/uAJT3nGc17wkj95xWv+4m/e
8JZ/+Jd3BIIDgSCCiUFMYhGbOMQlHvFJQEJCCCURiQkjnCQkJRnJSUFKUpGa
NEQQSRRpSUc06cnAf2iPhMo=
            "]]}, 
          RowBox[{
            FractionBox["1", 
             RowBox[{"1", "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                  RowBox[{"4.598727099260058`", "\[VeryThinSpace]"}], "-", 
                  FractionBox["3.52414859327204`", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "5.159929687434594`"}], "+", 
                    RowBox[{"1.9331931754839236`", " ", "x1"}], "+", 
                    RowBox[{"3.3254331214092705`", " ", "x2"}]}]]}]], "+", 
                  FractionBox["4.491862868316634`", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"0.03740864639431674`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"3.4094328161585317`", " ", "x1"}], "+", 
                    RowBox[{"4.25545740387191`", " ", "x2"}]}]]}]], "-", 
                  FractionBox["6.606371579879693`", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "7.6858754949762815`"}], "+", 
                    RowBox[{"2.679224262949959`", " ", "x1"}], "+", 
                    RowBox[{"4.744474707510636`", " ", "x2"}]}]]}]], "+", 
                  FractionBox["6.322202845510302`", 
                   RowBox[{"1", "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"0.025229513975253443`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"4.124545278490798`", " ", "x1"}], "+", 
                    RowBox[{"4.941713460937681`", " ", "x2"}]}]]}]]}]]}]], 
            "\[Equal]", "0.5`"}]], 
         Annotation[#, (1 + 
            E^(4.598727099260058 - 3.52414859327204/(1 + 
              E^(-5.159929687434594 + 1.9331931754839236` $CellContext`x1 + 
                3.3254331214092705` $CellContext`x2)) + 
              4.491862868316634/(1 + 
               E^(0.03740864639431674 + 3.4094328161585317` $CellContext`x1 + 
                 4.25545740387191 $CellContext`x2)) - 6.606371579879693/(1 + 
              E^(-7.6858754949762815` + 2.679224262949959 $CellContext`x1 + 
                4.744474707510636 $CellContext`x2)) + 
              6.322202845510302/(1 + 
               E^(0.025229513975253443` + 4.124545278490798 $CellContext`x1 + 
                 4.941713460937681 $CellContext`x2))))^(-1) == 0.5, 
          "Tooltip"]& ]}}]}, {
    DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
     AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.2]], BaseStyle -> Automatic, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
     FrameStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.2]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Automatic, ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "ScalingFunctions" -> None}, PlotRange -> {{-1, 2}, {-1, 2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJwVl3lUT90XxlUkIqVBkpI0oFGlueeNqERIyNggUUmGhCJFkia8iRJ5RUmU
RBoklQaVikaNvvN0740UEel3f3+cte76nHvWWWef/exnHw2fYLf9ElOmTGmg
hxg9/v8dypzO31Lfhj3iLjNUffNQFr06ePgrAzGrNVzfzWjH72UioW1kAbaF
/qWy1Jm4kWVVZLO+He86DFqDXAvx7UDpoZ2uTGRPd1d9ltSO6xHHX9xRfYHE
HSGEzFkmXvoHXdD62A4f3ZK0ZlERlroYBrx9zER9U4woTb4DBm1/IiZKilFr
IxKc7GWiW/+/zTLbOjAebu+rf6kU3gZZB/RmsMC/UlpyPrUD77RinPdsfYUJ
dS8ew5yFseE29bHeDlxvbTRI1HyNVLkF+1P8WJjuTsYELuyE1+k5Cq+HK2Aq
0cV2TmFh3stpQ589O3FTLvfMD89KfBi96vP3LQs6yupb3TM7cdZvfbCMYxUO
8VyYhd9YMA+zKH/H6cS+V0Pe2gbVkPok6XVAgw2n/s2atjpdWCd7zd1O8S3u
N1QNLtjEhoddYNwz/y4Y7zdx3PbnLfDqzJ4PEWwc/C96WOtJF+aVdVoeZteg
74l5f3QeG6fEMzxuDXVhQuaUXkxjLU5mfNtp2c9GrG/xGxnjbnD2qahnPKvD
3Kt5PdRMDlLrPmhfON6NhpJyuZep9ciPOuiRaclBjq4ocayoGwWzPae2nHuH
dcc1u7cd5KAkTuJ74M9u3PARG+P6NYDnO7hV+iYH70jV3QyrTzhTfF84saER
57eldbyp5eCT68q37mc/Yd+stf2KZk1Qc3LfEjLKgaBg47KGN5+wzlvQoq/6
HqWWc9p0Nbn4Odf/mq14DwxfxlWtkWjG1uWNmwY2czHjxPmfzxx6oCSt/2KP
qBnDqhdbr0VyMb873VP7Ug8mPFuzT3xsQYLMP65rn3Kx1LKo7lZDD9gvjqYl
lrRCd8rv9+MDXFimt+jPmdUL7tSZdW0bP6BmuMjl6SwenCf41y+49sLDcNeb
vW8/wIt9pHGfNQ87PMX+jF3tRdOOJyWilR/xp2O5s3IADwFVKvsOtffCLnri
WWjuRzqOvPr3qTyEaZo2MhT7UJjv+lhcrQ0mJffWRtXzEHdxg/FWjz5o9dx9
kHStDa2Pdtea/eDhFt8vteFWH1Ilhu+oTGtHYPo8B9ESPnKdIydtB/ogbbDq
ZvapdkgmtlVnbOGj7HGaX6F6PyI8kq+uINuRGZFov+U8H42znzdr+/Tj23nO
5QrPDtgdcaqc/oyP3uD3pukP+rE/z+zCuvYO9HpLoPwzH6KP3PQ5/H586o45
07W2E6FbKl4fkRFg3GRSPHrpAFzEP53wKevE3DWnbbRsBZh5QzngZ+AAKvSW
Bg/pdyFvpemrnkABVH4afzyUPwDj7WEHw+51wVn3i2XSLQGW7XSxYH4dQFZU
k7ekYje483NLVjUIYF3ue3erySCUn6ju+je2G1HS+83HxgRwUYuQbDwxiPiu
IHe1P91QnVB/+VhbiF2RN4PsSgYxOeXNhtzgTygZ6jX12ipEIKugo3B8EEeX
yzquZH+COyPluUK0EOEOjdY6tp/B2er9T/W2Hnz9uGlFQ6EQCdnszPRzn+ER
WWjp2tiDhLfSz84yhbgtNTFDtvozmnIlTHpte6FbVGe4QlaEbWbxFqvEGbDr
dNfze9aLmuyofJ6dCHt58w6d0WSgcDJL69uSPnim2uinB4ngd/PB3ZcODGgt
G1OLSO3D78tjjzfeFuGwk3H71/0MpLo7Kc+c1Y+b4YXLpjaJEPrrteTySwxI
n0uTu3GuHyuCgh6V/BIhIned1f4cBs49Es1cPNKPlr26ukG6BGJ2dQfdbWBg
uN16ar7fAAI2sbM1thNImuV7r0fEgO/fhAnL3gFIrsrQ6rpI4Mbrrx3ys+j6
pzv4o3bDIDJNdjyIe0Eg4/BZKVd9Jly2GH7dXDUIOy0FTbAJZKvPtIml627F
2UjhgOln9Ci13huRI5H/4UZwdTATxjkfWf45n3FCKm5Rzj8kXkZp3v9zlQk3
f7mh8dkMyI073N0dTKJiRUHXykImEv6WiiodGXhCTC6UyyBRx7aZebSdidpk
H35MFANOA2W3a9+TaLneYPt4lIlJXWnO+lcMcFpOLAj7TWLR9bLiH3NZMHNS
9eINMfAlv/m/9yoUJIxCKnyXs7Av/G+vthJ9vkBPk10LKPCa9GvbVrNwLZ+x
9YAtE5W6w7VCmjce4Df9s5uFSmb1h4e+TORwz3ucUqWQJ3GvLT+EhSGFLBdB
PBPXMhUIyYUUrt3d2aOayIKq06U63edMhHlmn02heYi1AiMui4V14f72/rSv
+KhayC5Ro7C9u5n38zULp/Ndyh+JseDS05BZSHPr45covy4WHjL1zUW6LJjc
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
tJ7/B5U7nuo=
              "], {{
                Rational[-15, 2], 
                Rational[-575, 2]}, {
                Rational[15, 2], 
                Rational[575, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[-575, 2]}, {
                  Rational[-15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[575, 2]}, {
                  Rational[15, 2], 
                  Rational[-575, 2]}}, {{7.5, -287.5}, {-7.5, -287.5}, {-7.5, 
                287.5}, {7.5, 287.5}, {7.5, -287.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -287.5}, {7.500000000000001, 
                287.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -174.24242424242425`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -174.24242424242425`}]}, {{
                    7.500000000000001, -58.08080808080808}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -58.08080808080808}]}, {{
                    7.500000000000001, 58.08080808080808}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    58.08080808080808}]}, {{7.500000000000001, 
                    174.24242424242425`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    174.24242424242425`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.500000000000001, -261.3636363636364}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -261.3636363636364}]}, {{
                    7.500000000000001, -232.32323232323233`}, 
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -232.32323232323233`}]}, {{
                    7.500000000000001, -203.2828282828283}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -203.2828282828283}]}, {{
                    7.500000000000001, -145.2020202020202}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -145.2020202020202}]}, {{
                    7.500000000000001, -116.16161616161617`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -116.16161616161617`}]}, {{
                    7.500000000000001, -87.12121212121212}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -87.12121212121212}]}, {{
                    7.500000000000001, -29.04040404040404}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -29.04040404040404}]}, {{
                    7.500000000000001, 0.}, 
                    Offset[{2.5, 0.}, {7.500000000000001, 0.}]}, {{
                    7.500000000000001, 29.04040404040404}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    29.04040404040404}]}, {{7.500000000000001, 
                    87.12121212121212}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    87.12121212121212}]}, {{7.500000000000001, 
                    116.16161616161617`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    116.16161616161617`}]}, {{7.500000000000001, 
                    145.2020202020202}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    145.2020202020202}]}, {{7.500000000000001, 
                    203.2828282828283}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    203.2828282828283}]}, {{7.500000000000001, 
                    232.32323232323233`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    232.32323232323233`}]}, {{7.500000000000001, 
                    261.3636363636364}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    261.3636363636364}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -174.24242424242425`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, -58.08080808080808}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 58.08080808080808}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    174.24242424242425`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], FontFamily -> "Times"], 
                    Directive[
                    Opacity[1], FontFamily -> "Times"]}, StripOnInput -> 
                    False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], FontFamily -> "Times"], 
                    Directive[
                    Opacity[1], FontFamily -> "Times"]}, StripOnInput -> 
                    False]}, {}}, {
                    Directive[
                    Opacity[1], FontFamily -> "Times"], 
                    Directive[
                    Opacity[1], FontFamily -> "Times"]}, StripOnInput -> 
                   False], "GraphicsLabel", StripOnInput -> False]}, 
                "GraphicsTicks", StripOnInput -> False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 575}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.293416, 0.0574044, 0.529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.19561066666666668`, 0.0382696, 
                    0.35294133333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.293416, 0.0574044, 0.529412]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.293416, 0.0574044, 0.529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.293416, 0.0574044, 0.529412], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.563820859082933, 0.527565423056382, 0.909498741130694], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37588057272195535`, 0.35171028203758803`, 
                    0.6063324940871293], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.563820859082933, 0.527565423056382, \
0.909498741130694]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.563820859082933, 0.527565423056382, 
                    0.909498741130694]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.563820859082933, 0.527565423056382, 0.909498741130694], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.762631, 0.846998, 0.914031], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5084206666666666, 0.5646653333333334, 
                    0.6093540000000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.762631, 0.846998, 0.914031]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.762631, 0.846998, 0.914031]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.762631, 0.846998, 0.914031], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.941176, 0.906538, 0.834043], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6274506666666667, 0.6043586666666667, 
                    0.5560286666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.941176, 0.906538, 0.834043]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.941176, 0.906538, 0.834043]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.941176, 0.906538, 0.834043], Editable -> False,
                     Selectable -> False]}], "}"}], ",", "#1"}], "]"}], "&"}],
                ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "0.0050694278484792795`", ",", "0.9948836407641092`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "575"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6843326847228994`*^9, 3.684332707757188*^9}, {
   3.684332740175704*^9, 3.6843327496479893`*^9}, {3.6843327899287243`*^9, 
   3.684332795999755*^9}, {3.684332867730361*^9, 3.684332894650228*^9}, 
   3.684333035844401*^9, 3.684333183224416*^9, 3.684336371059703*^9}]
}, Open  ]]
},
WindowSize->{607, 972},
WindowMargins->{{-616, Automatic}, {-11, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2789, 90, 183, "Input"],
Cell[3372, 114, 4526, 127, 202, "Output"],
Cell[7901, 243, 3439, 69, 229, "Output"]
}, Open  ]],
Cell[11355, 315, 141, 2, 30, "Input"],
Cell[11499, 319, 573, 17, 50, "Input"],
Cell[CellGroupData[{
Cell[12097, 340, 10545, 253, 810, "Input"],
Cell[22645, 595, 12002, 295, 177, "Output"]
}, Open  ]],
Cell[34662, 893, 2313, 65, 140, "Input"],
Cell[36978, 960, 816, 24, 67, "Input"],
Cell[CellGroupData[{
Cell[37819, 988, 197, 5, 30, "Input"],
Cell[38019, 995, 854, 26, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38910, 1026, 547, 16, 30, "Input"],
Cell[39460, 1044, 6848, 123, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46345, 1172, 1487, 42, 88, "Input"],
Cell[47835, 1216, 83049, 1469, 602, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130921, 2690, 12191, 278, 852, "Input"],
Cell[143115, 2970, 11172, 273, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154324, 3248, 198, 5, 30, "Input"],
Cell[154525, 3255, 246, 6, 30, "Output"]
}, Open  ]],
Cell[154786, 3264, 668, 20, 46, "Input"],
Cell[CellGroupData[{
Cell[155479, 3288, 499, 15, 44, "Input"],
Cell[155981, 3305, 6987, 127, 262, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163005, 3437, 1631, 44, 88, "Input"],
Cell[164639, 3483, 100161, 1755, 602, "Output"]
}, Open  ]]
}
]
*)

